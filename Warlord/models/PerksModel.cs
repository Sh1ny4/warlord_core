using TaleWorlds.CampaignSystem.CharacterDevelopment;
using TaleWorlds.Core;
using TaleWorlds.CampaignSystem;

namespace Warlord.models
{
    public class PerksModel : DefaultPerks
    {
        private static readonly int[] TierSkillRequirements = new int[12]
        {
            25, 50, 75, 100, 125, 150, 175, 200, 225, 250,
            275, 300
        };

        private static DefaultPerks Instance => Campaign.Current.DefaultPerks;

        public override DefaultPerks()
        {
            RegisterAll();
        }

        private void RegisterAll()
        {
            _oneHandedWrappedHandles = Create("OneHandedWrappedHandles");
            _oneHandedBasher = Create("OneHandedBasher");
            _oneHandedToBeBlunt = Create("OneHandedToBeBlunt");
            _oneHandedSwiftStrike = Create("OneHandedSwiftStrike");
            _oneHandedCavalry = Create("OneHandedCavalry");
            _oneHandedShieldBearer = Create("OneHandedShieldBearer");
            _oneHandedTrainer = Create("OneHandedTrainer");
            _oneHandedDuelist = Create("OneHandedDuelist");
            _oneHandedShieldWall = Create("OneHandedShieldWall");
            _oneHandedArrowCatcher = Create("OneHandedArrowCatcher");
            _oneHandedMilitaryTradition = Create("OneHandedMilitaryTradition");
            _oneHandedCorpsACorps = Create("OneHandedCorpsACorps");
            _oneHandedStandUnited = Create("OneHandedStandUnited");
            _oneHandedLeadByExample = Create("OneHandedLeadByExample");
            _oneHandedSteelCoreShields = Create("OneHandedSteelCoreShields");
            _oneHandedFleetOfFoot = Create("OneHandedFleetOfFoot");
            _oneHandedDeadlyPurpose = Create("OneHandedDeadlyPurpose");
            _oneHandedUnwaveringDefense = Create("OneHandedUnwaveringDefense");
            _oneHandedPrestige = Create("OneHandedPrestige");
            _oneHandedChinkInTheArmor = Create("OneHandedChinkInTheArmor");
            _oneHandedWayOfTheSword = Create("OneHandedWayOfTheSword");
            _twoHandedStrongGrip = Create("TwoHandedStrongGrip");
            _twoHandedWoodChopper = Create("TwoHandedWoodChopper");
            _twoHandedOnTheEdge = Create("TwoHandedOnTheEdge");
            _twoHandedHeadBasher = Create("TwoHandedHeadBasher");
            _twoHandedShowOfStrength = Create("TwoHandedShowOfStrength");
            _twoHandedBaptisedInBlood = Create("TwoHandedBaptisedInBlood");
            _twoHandedBeastSlayer = Create("TwoHandedBeastSlayer");
            _twoHandedShieldBreaker = Create("TwoHandedShieldBreaker");
            _twoHandedBerserker = Create("TwoHandedBerserker");
            _twoHandedConfidence = Create("TwoHandedConfidence");
            _twoHandedProjectileDeflection = Create("TwoHandedProjectileDeflection");
            _twoHandedTerror = Create("TwoHandedTerror");
            _twoHandedHope = Create("TwoHandedHope");
            _twoHandedRecklessCharge = Create("TwoHandedRecklessCharge");
            _twoHandedThickHides = Create("TwoHandedThickHides");
            _twoHandedBladeMaster = Create("TwoHandedBladeMaster");
            _twoHandedVandal = Create("TwoHandedVandal");
            _twoHandedWayOfTheGreatAxe = Create("TwoHandedWayOfTheGreatAxe");
            _polearmPikeman = Create("PolearmPikeman");
            _polearmCavalry = Create("PolearmCavalry");
            _polearmBraced = Create("PolearmBraced");
            _polearmKeepAtBay = Create("PolearmKeepAtBay");
            _polearmSwiftSwing = Create("PolearmSwiftSwing");
            _polearmCleanThrust = Create("PolearmCleanThrust");
            _polearmFootwork = Create("PolearmFootwork");
            _polearmHardKnock = Create("PolearmHardKnock");
            _polearmSteedKiller = Create("PolearmSteadKiller");
            _polearmLancer = Create("PolearmLancer");
            _polearmSkewer = Create("PolearmSkewer");
            _polearmGuards = Create("PolearmGuards");
            _polearmStandardBearer = Create("PolearmStandardBearer");
            _polearmPhalanx = Create("PolearmPhalanx");
            _polearmHardyFrontline = Create("PolearmHardyFrontline");
            _polearmDrills = Create("PolearmDrills");
            _polearmSureFooted = Create("PolearmSureFooted");
            _polearmUnstoppableForce = Create("PolearmUnstoppableForce");
            _polearmCounterweight = Create("PolearmCounterweight");
            _polearmSharpenTheTip = Create("PolearmSharpenTheTip");
            _polearmWayOfTheSpear = Create("PolearmWayOfTheSpear");
            _bowBowControl = Create("BowBowControl");
            _bowDeadAim = Create("BowDeadAim");
            _bowBodkin = Create("BowBodkin");
            _bowRangersSwiftness = Create("BowRangersSwiftness");
            _bowRapidFire = Create("BowRapidFire");
            _bowQuickAdjustments = Create("BowQuickAdjustments");
            _bowMerryMen = Create("BowMerryMen");
            _bowMountedArchery = Create("BowMountedArchery");
            _bowTrainer = Create("BowTrainer");
            _bowStrongBows = Create("BowStrongBows");
            _bowDiscipline = Create("BowDiscipline");
            _bowHunterClan = Create("BowHunterClan");
            _bowSkirmishPhaseMaster = Create("BowSkirmishPhaseMaster");
            _bowEagleEye = Create("BowEagleEye");
            _bowBullsEye = Create("BowBullsEye");
            _bowRenownedArcher = Create("BowRenownedArcher");
            _bowHorseMaster = Create("BowHorseMaster");
            _bowDeepQuivers = Create("BowDeepQuivers");
            _bowQuickDraw = Create("BowQuickDraw");
            _bowNockingPoint = Create("BowNockingPoint");
            _bowDeadshot = Create("BowDeadshot");
            _crossbowPiercer = Create("CrossbowPiercer");
            _crossbowMarksmen = Create("CrossbowMarksmen");
            _crossbowUnhorser = Create("CrossbowUnhorser");
            _crossbowWindWinder = Create("CrossbowWindWinder");
            _crossbowDonkeysSwiftness = Create("CrossbowDonkeysSwiftness");
            _crossbowSheriff = Create("CrossbowSheriff");
            _crossbowPeasantLeader = Create("CrossbowPeasantLeader");
            _crossbowRenownMarksmen = Create("CrossbowRenownMarksmen");
            _crossbowFletcher = Create("CrossbowFletcher");
            _crossbowPuncture = Create("CrossbowPuncture");
            _crossbowLooseAndMove = Create("CrossbowLooseAndMove");
            _crossbowDeftHands = Create("CrossbowDeftHands");
            _crossbowCounterFire = Create("CrossbowCounterFire");
            _crossbowMountedCrossbowman = Create("CrossbowMountedCrossbowman");
            _crossbowSteady = Create("CrossbowSteady");
            _crossbowLongShots = Create("CrossbowLongShots");
            _crossbowHammerBolts = Create("CrossbowHammerBolts");
            _crossbowPavise = Create("CrossbowPavise");
            _crossbowTerror = Create("CrossbowTerror");
            _crossbowPickedShots = Create("CrossbowBoltenGuard");
            _crossbowMightyPull = Create("CrossbowMightyPull");
            _throwingQuickDraw = Create("ThrowingQuickDraw");
            _throwingShieldBreaker = Create("ThrowingShieldBreaker");
            _throwingHunter = Create("ThrowingHunter");
            _throwingFlexibleFighter = Create("ThrowingFlexibleFighter");
            _throwingMountedSkirmisher = Create("ThrowingMountedSkirmisher");
            _throwingPerfectTechnique = Create("ThrowingPerfectTechnique");
            _throwingRunningThrow = Create("ThrowingRunningThrow");
            _throwingKnockOff = Create("ThrowingKnockOff");
            _throwingSkirmisher = Create("ThrowingSkirmisher");
            _throwingWellPrepared = Create("ThrowingWellPrepared");
            _throwingFocus = Create("ThrowingFocus");
            _throwingLastHit = Create("ThrowingLastHit");
            _throwingHeadHunter = Create("ThrowingHeadHunter");
            _throwingThrowingCompetitions = Create("ThrowingThrowingCompetitions");
            _throwingSaddlebags = Create("ThrowingSaddlebags");
            _throwingSplinters = Create("ThrowingSplinters");
            _throwingResourceful = Create("ThrowingResourceful");
            _throwingLongReach = Create("ThrowingLongReach");
            _throwingWeakSpot = Create("ThrowingWeakSpot");
            _throwingImpale = Create("ThrowingImpale");
            _throwingUnstoppableForce = Create("ThrowingUnstoppableForce");
            _ridingFullSpeed = Create("RidingFullSpeed");
            _ridingNimbleSteed = Create("RidingNimbleStead");
            _ridingWellStraped = Create("RidingWellStraped");
            _ridingVeterinary = Create("RidingVeterinary");
            _ridingNomadicTraditions = Create("RidingNomadicTraditions");
            _ridingDeeperSacks = Create("RidingDeeperSacks");
            _ridingSagittarius = Create("RidingSagittarius");
            _ridingSweepingWind = Create("RidingSweepingWind");
            _ridingReliefForce = Create("RidingReliefForce");
            _ridingMountedWarrior = Create("RidingMountedWarrior");
            _ridingHorseArcher = Create("RidingHorseArcher");
            _ridingShepherd = Create("RidingShepherd");
            _ridingBreeder = Create("RidingBreeder");
            _ridingThunderousCharge = Create("RidingThunderousCharge");
            _ridingAnnoyingBuzz = Create("RidingAnnoyingBuzz");
            _ridingMountedPatrols = Create("RidingMountedPatrols");
            _ridingCavalryTactics = Create("RidingCavalryTactics");
            _ridingDauntlessSteed = Create("RidingDauntlessSteed");
            _ridingToughSteed = Create("RidingToughSteed");
            _ridingTheWayOfTheSaddle = Create("RidingTheWayOfTheSaddle");
            _athleticsMorningExercise = Create("AthleticsMorningExercise");
            _athleticsWellBuilt = Create("AthleticsWellBuilt");
            _athleticsFury = Create("AthleticsFury");
            _athleticsFormFittingArmor = Create("AthleticsFormFittingArmor");
            _athleticsImposingStature = Create("AthleticsImposingStature");
            _athleticsStamina = Create("AthleticsStamina");
            _athleticsSprint = Create("AthleticsSprint");
            _athleticsPowerful = Create("AthleticsPowerful");
            _athleticsSurgingBlow = Create("AthleticsSurgingBlow");
            _athleticsBraced = Create("AthleticsBraced");
            _athleticsWalkItOff = Create("AthleticsWalkItOff");
            _athleticsAGoodDaysRest = Create("AthleticsAGoodDaysRest");
            _athleticsDurable = Create("AthleticsDurable");
            _athleticsEnergetic = Create("AthleticsEnergetic");
            _athleticsSteady = Create("AthleticsSteady");
            _athleticsStrong = Create("AthleticsStrong");
            _athleticsStrongLegs = Create("AthleticsStrongLegs");
            _athleticsStrongArms = Create("AthleticsStrongArms");
            _athleticsSpartan = Create("AthleticsSpartan");
            _athleticsIgnorePain = Create("AthleticsIgnorePain");
            _athleticsMightyBlow = Create("AthleticsMightyBlow");
            _craftingSharpenedEdge = Create("CraftingSharpenedEdge");
            _craftingSharpenedTip = Create("CraftingSharpenedTip");
            _craftingIronMaker = Create("IronYield");
            _craftingCharcoalMaker = Create("CharcoalYield");
            _craftingSteelMaker = Create("SteelMaker");
            _craftingSteelMaker2 = Create("SteelMaker2");
            _craftingSteelMaker3 = Create("SteelMaker3");
            _craftingCuriousSmelter = Create("CuriousSmelter");
            _craftingCuriousSmith = Create("CuriousSmith");
            _craftingPracticalRefiner = Create("PracticalRefiner");
            _craftingPracticalSmelter = Create("PracticalSmelter");
            _craftingPracticalSmith = Create("PracticalSmith");
            _craftingArtisanSmith = Create("ArtisanSmith");
            _craftingExperiencedSmith = Create("ExperiencedSmith");
            _craftingMasterSmith = Create("MasterSmith");
            _craftingLegendarySmith = Create("LegendarySmith");
            _craftingVigorousSmith = Create("VigorousSmith");
            _craftingStrongSmith = Create("StrongSmith");
            _craftingEnduringSmith = Create("EnduringSmith");
            _craftingFencerSmith = Create("WeaponMasterSmith");
            _tacticsTightFormations = Create("TacticsTightFormations");
            _tacticsLooseFormations = Create("TacticsLooseFormations");
            _tacticsExtendedSkirmish = Create("TacticsExtendedSkirmish");
            _tacticsDecisiveBattle = Create("TacticsDecisiveBattle");
            _tacticsSmallUnitTactics = Create("TacticsSmallUnitTactics");
            _tacticsHordeLeader = Create("TacticsHordeLeader");
            _tacticsLawKeeper = Create("TacticsLawkeeper");
            _tacticsCoaching = Create("TacticsCoaching");
            _tacticsSwiftRegroup = Create("TacticsSwiftRegroup");
            _tacticsImproviser = Create("TacticsImproviser");
            _tacticsOnTheMarch = Create("TacticsOnTheMarch");
            _tacticsCallToArms = Create("TacticsCallToArms");
            _tacticsPickThemOfTheWalls = Create("TacticsPickThemOfTheWalls");
            _tacticsMakeThemPay = Create("TacticsMakeThemPay");
            _tacticsEliteReserves = Create("TacticsEliteReserves");
            _tacticsEncirclement = Create("TacticsEncirclement");
            _tacticsPreBattleManeuvers = Create("TacticsPreBattleManeuvers");
            _tacticsBesieged = Create("TacticsBesieged");
            _tacticsCounteroffensive = Create("TacticsCounteroffensive");
            _tacticsGensdarmes = Create("TacticsGensdarmes");
            _tacticsTacticalMastery = Create("TacticsTacticalMastery");
            _scoutingDayTraveler = Create("ScoutingDayTraveler");
            _scoutingNightRunner = Create("ScoutingNightRunner");
            _scoutingPathfinder = Create("ScoutingPathfinder");
            _scoutingWaterDiviner = Create("ScoutingWaterDiviner");
            _scoutingForestKin = Create("ScoutingForestKin");
            _scoutingDesertBorn = Create("ScoutingDesertBorn");
            _scoutingForcedMarch = Create("ScoutingForcedMarch");
            _scoutingUnburdened = Create("ScoutingUnburdened");
            _scoutingTracker = Create("ScoutingTracker");
            _scoutingRanger = Create("ScoutingRanger");
            _scoutingMountedScouts = Create("ScoutingMountedScouts");
            _scoutingPatrols = Create("ScoutingPatrols");
            _scoutingForagers = Create("ScoutingForagers");
            _scoutingBeastWhisperer = Create("ScoutingBeastWhisperer");
            _scoutingVillageNetwork = Create("ScoutingVillageNetwork");
            _scoutingRumourNetwork = Create("ScoutingRumourNetwork");
            _scoutingVantagePoint = Create("ScoutingVantagePoint");
            _scoutingKeenSight = Create("ScoutingKeenSight");
            _scoutingVanguard = Create("ScoutingVanguard");
            _scoutingRearguard = Create("ScoutingRearguard");
            _scoutingUncannyInsight = Create("ScoutingUncannyInsight");
            _rogueryNoRestForTheWicked = Create("RogueryNoRestForTheWicked");
            _roguerySweetTalker = Create("RoguerySweetTalker");
            _rogueryTwoFaced = Create("RogueryTwoFaced");
            _rogueryDeepPockets = Create("RogueryDeepPockets");
            _rogueryInBestLight = Create("RogueryInBestLight");
            _rogueryKnowHow = Create("RogueryKnowHow");
            _rogueryPromises = Create("RogueryPromises");
            _rogueryManhunter = Create("RogueryManhunter");
            _rogueryScarface = Create("RogueryScarface");
            _rogueryWhiteLies = Create("RogueryWhiteLies");
            _roguerySmugglerConnections = Create("RoguerySmugglerConnections");
            _rogueryPartnersInCrime = Create("RogueryPartnersInCrime");
            _rogueryOneOfTheFamily = Create("RogueryOneOfTheFamily");
            _roguerySaltTheEarth = Create("RoguerySaltTheEarth");
            _rogueryCarver = Create("RogueryCarver");
            _rogueryRansomBroker = Create("RogueryRansomBroker");
            _rogueryArmsDealer = Create("RogueryArmsDealer");
            _rogueryDirtyFighting = Create("RogueryDirtyFighting");
            _rogueryDashAndSlash = Create("RogueryDashAndSlash");
            _rogueryFleetFooted = Create("RogueryFleetFooted");
            _rogueryRogueExtraordinaire = Create("RogueryRogueExtraordinaire");
            _leadershipCombatTips = Create("LeadershipCombatTips");
            _leadershipRaiseTheMeek = Create("LeadershipRaiseTheMeek");
            _leadershipFerventAttacker = Create("LeadershipFerventAttacker");
            _leadershipStoutDefender = Create("LeadershipStoutDefender");
            _leadershipAuthority = Create("LeadershipAuthority");
            _leadershipHeroicLeader = Create("LeadershipHeroicLeader");
            _leadershipLoyaltyAndHonor = Create("LeadershipLoyaltyAndHonor");
            _leadershipFamousCommander = Create("LeadershipFamousCommander");
            _leadershipPresence = Create("LeadershipPresence");
            _leadershipLeaderOfTheMasses = Create("LeadershipLeaderOfMasses");
            _leadershipVeteransRespect = Create("LeadershipVeteransRespect");
            _leadershipCitizenMilitia = Create("LeadershipCitizenMilitia");
            _leadershipInspiringLeader = Create("LeadershipInspiringLeader");
            _leadershipUpliftingSpirit = Create("LeadershipUpliftingSpirit");
            _leadershipMakeADifference = Create("LeadershipMakeADifference");
            _leadershipLeadByExample = Create("LeadershipLeadByExample");
            _leadershipTrustedCommander = Create("LeadershipTrustedCommander");
            _leadershipGreatLeader = Create("LeadershipGreatLeader");
            _leadershipWePledgeOurSwords = Create("LeadershipWePledgeOurSwords");
            _leadershipTalentMagnet = Create("LeadershipTalentMagnet");
            _leadershipUltimateLeader = Create("LeadershipUltimateLeader");
            _charmVirile = Create("CharmVirile");
            _charmSelfPromoter = Create("CharmSelfPromoter");
            _charmOratory = Create("CharmOratory");
            _charmWarlord = Create("CharmWarlord");
            _charmForgivableGrievances = Create("CharmForgivableGrievances");
            _charmMeaningfulFavors = Create("CharmMeaningfulFavors");
            _charmInBloom = Create("CharmInBloom");
            _charmYoungAndRespectful = Create("CharmYoungAndRespectful");
            _charmFirebrand = Create("CharmFirebrand");
            _charmFlexibleEthics = Create("CharmFlexibleEthics");
            _charmEffortForThePeople = Create("CharmEffortForThePeople");
            _charmSlickNegotiator = Create("CharmSlickNegotiator");
            _charmGoodNatured = Create("CharmGoodNatured");
            _charmTribute = Create("CharmTribute");
            _charmMoralLeader = Create("CharmMoralLeader");
            _charmNaturalLeader = Create("CharmNaturalLeader");
            _charmPublicSpeaker = Create("CharmPublicSpeaker");
            _charmParade = Create("CharmParade");
            _charmCamaraderie = Create("CharmCamaraderie");
            _charmImmortalCharm = Create("CharmImmortalCharm");
            _tradeAppraiser = Create("TradeAppraiser");
            _tradeWholeSeller = Create("TradeWholeSeller");
            _tradeCaravanMaster = Create("TradeCaravanMaster");
            _tradeMarketDealer = Create("TradeMarketDealer");
            _tradeTravelingRumors = Create("TradeTravelingRumors");
            _tradeLocalConnection = Create("TradeLocalConnection");
            _tradeDistributedGoods = Create("TradeDistributedGoods");
            _tradeTollgates = Create("TradeTollgates");
            _tradeArtisanCommunity = Create("TradeArtisanCommunity");
            _tradeGreatInvestor = Create("TradeGreatInvestor");
            _tradeMercenaryConnections = Create("TradeMercenaryConnections");
            _tradeContentTrades = Create("TradeContentTrades");
            _tradeInsurancePlans = Create("TradeInsurancePlans");
            _tradeRapidDevelopment = Create("TradeRapidDevelopment");
            _tradeGranaryAccountant = Create("TradeGranaryAccountant");
            _tradeTradeyardForeman = Create("TradeTradeyardForeman");
            _tradeSwordForBarter = Create("TradeSwordForBarter");
            _tradeSelfMadeMan = Create("TradeSelfMadeMan");
            _tradeSilverTongue = Create("TradeSilverTongue");
            _tradeSpringOfGold = Create("TradeSpringOfGold");
            _tradeManOfMeans = Create("TradeManOfMeans");
            _tradeTrickleDown = Create("TradeTrickleDown");
            _tradeEverythingHasAPrice = Create("TradeEverythingHasAPrice");
            _stewardWarriorsDiet = Create("StewardWarriorsDiet");
            _stewardFrugal = Create("StewardFrugal");
            _stewardSevenVeterans = Create("StewardSevenVeterans");
            _stewardDrillSergant = Create("StewardDrillSergant");
            _stewardSweatshops = Create("StewardSweatshops");
            _stewardStiffUpperLip = Create("StewardStiffUpperLip");
            _stewardPaidInPromise = Create("StewardPaidInPromise");
            _stewardEfficientCampaigner = Create("StewardEfficientCampaigner");
            _stewardGivingHands = Create("StewardForeseeableFuture");
            _stewardLogistician = Create("StewardLogistician");
            _stewardRelocation = Create("StewardRelocation");
            _stewardAidCorps = Create("StewardAidCorps");
            _stewardGourmet = Create("StewardGourmet");
            _stewardSoundReserves = Create("StewardSoundReserves");
            _stewardForcedLabor = Create("StewardForcedLabor");
            _stewardContractors = Create("StewardContractors");
            _stewardArenicosMules = Create("StewardArenicosMules");
            _stewardArenicosHorses = Create("StewardArenicosHorses");
            _stewardMasterOfPlanning = Create("StewardMasterOfPlanning");
            _stewardMasterOfWarcraft = Create("StewardMasterOfWarcraft");
            _stewardPriceOfLoyalty = Create("StewardPriceOfLoyalty");
            _medicineSelfMedication = Create("MedicineSelfMedication");
            _medicinePreventiveMedicine = Create("MedicinePreventiveMedicine");
            _medicineTriageTent = Create("MedicineTriageTent");
            _medicineWalkItOff = Create("MedicineWalkItOff");
            _medicineSledges = Create("MedicineSledges");
            _medicineDoctorsOath = Create("MedicineDoctorsOath");
            _medicineBestMedicine = Create("MedicineBestMedicine");
            _medicineGoodLodging = Create("MedicineGoodLodging");
            _medicineSiegeMedic = Create("MedicineSiegeMedic");
            _medicineVeterinarian = Create("MedicineVeterinarian");
            _medicinePristineStreets = Create("MedicinePristineStreets");
            _medicineBushDoctor = Create("MedicineBushDoctor");
            _medicinePerfectHealth = Create("MedicinePerfectHealth");
            _medicineHealthAdvise = Create("MedicineHealthAdvise");
            _medicinePhysicianOfPeople = Create("MedicinePhysicianOfPeople");
            _medicineCleanInfrastructure = Create("MedicineCleanInfrastructure");
            _medicineCheatDeath = Create("MedicineCheatDeath");
            _medicineFortitudeTonic = Create("MedicineFortitudeTonic");
            _medicineHelpingHands = Create("MedicineHelpingHands");
            _medicineBattleHardened = Create("MedicineBattleHardened");
            _medicineMinisterOfHealth = Create("MedicineMinisterOfHealth");
            _engineeringScaffolds = Create("EngineeringScaffolds");
            _engineeringTorsionEngines = Create("EngineeringTorsionEngines");
            _engineeringSiegeWorks = Create("EngineeringSiegeWorks");
            _engineeringDungeonArchitect = Create("EngineeringDungeonArchitect");
            _engineeringCarpenters = Create("EngineeringCarpenters");
            _engineeringMilitaryPlanner = Create("EngineeringMilitaryPlanner");
            _engineeringWallBreaker = Create("EngineeringWallBreaker");
            _engineeringDreadfulSieger = Create("EngineeringDreadfulSieger");
            _engineeringSalvager = Create("EngineeringSalvager");
            _engineeringForeman = Create("EngineeringForeman");
            _engineeringStonecutters = Create("EngineeringStonecutters");
            _engineeringSiegeEngineer = Create("EngineeringSiegeEngineer");
            _engineeringCampBuilding = Create("EngineeringCampBuilding");
            _engineeringBattlements = Create("EngineeringBattlements");
            _engineeringEngineeringGuilds = Create("EngineeringEngineeringGuilds");
            _engineeringApprenticeship = Create("EngineeringApprenticeship");
            _engineeringMetallurgy = Create("EngineeringMetallurgy");
            _engineeringImprovedTools = Create("EngineeringImprovedTools");
            _engineeringClockwork = Create("EngineeringClockwork");
            _engineeringArchitecturalCommisions = Create("EngineeringArchitecturalCommissions");
            _engineeringMasterwork = Create("EngineeringMasterwork");
            InitializeAll();
        }

        private void InitializeAll()
        {
            _oneHandedWrappedHandles.Initialize("{=looKU9Gl}Wrapped Handles", DefaultSkills.OneHanded, GetTierCost(1), _oneHandedBasher, "{=dY3GOmTN}{VALUE}% handling to one handed weapons.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=0mBHB7mA}{VALUE} one handed skill to infantry troops in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.OneHandedUser);
            _oneHandedBasher.Initialize("{=6yEeYNRu}Basher", DefaultSkills.OneHanded, GetTierCost(1), _oneHandedWrappedHandles, "{=fFNNeqxu}{VALUE}% damage and longer stun duration with shield bashes.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=goOE8oiI}{VALUE}% damage taken by infantry while in shield wall formation.", SkillEffect.PerkRole.Captain, -0.04f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _oneHandedToBeBlunt.Initialize("{=SJ69EYuI}To Be Blunt", DefaultSkills.OneHanded, GetTierCost(2), _oneHandedSwiftStrike, "{=mzUa3duw}{VALUE}% damage with one handed axes and maces.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=Ib9RYpMO}{VALUE} daily security to governed settlement.", SkillEffect.PerkRole.Governor, 0.5f, SkillEffect.EffectIncrementType.Add);
            _oneHandedSwiftStrike.Initialize("{=ciELES5v}Swift Strike", DefaultSkills.OneHanded, GetTierCost(2), _oneHandedToBeBlunt, "{=bW7DT97A}{VALUE}% swing speed with one handed weapons.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=xwA6Om0Y}{VALUE} daily militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _oneHandedCavalry.Initialize("{=YVGtcLHF}Cavalry", DefaultSkills.OneHanded, GetTierCost(3), _oneHandedShieldBearer, "{=D3k7UbmZ}{VALUE}% damage with one handed weapons while mounted.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=aj2R3vnb}{VALUE}% melee damage by cavalry troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Melee);
            _oneHandedShieldBearer.Initialize("{=vnG1q18y}Shield Bearer", DefaultSkills.OneHanded, GetTierCost(3), _oneHandedCavalry, "{=hMJVRJdw}Removed movement speed penalty of wielding shields.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Invalid, "{=1QsZq9UW}{VALUE}% movement speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _oneHandedTrainer.Initialize("{=3xuwVbfs}Trainer", DefaultSkills.OneHanded, GetTierCost(4), _oneHandedDuelist, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.Add, "{=rXb91Rwi}{VALUE}% experience to melee troops in your party after every battle.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _oneHandedDuelist.Initialize("{=XphY9cNV}Duelist", DefaultSkills.OneHanded, GetTierCost(4), _oneHandedTrainer, "{=uRZgz63l}{VALUE}% damage while wielding a one handed weapon without a shield.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=uKTgBX4S}Double the amount of renown gained from tournaments.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.AddFactor);
            _oneHandedShieldWall.Initialize("{=nSwkI97I}Shieldwall", DefaultSkills.OneHanded, GetTierCost(5), _oneHandedArrowCatcher, "{=DiFIyniQ}{VALUE}% damage to your shield while blocking in wrong direction.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=EdDRYFoL}Larger shield protection area against projectiles to troops in your formation while in shield wall formation.", SkillEffect.PerkRole.Captain, 0.01f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.ShieldUser);
            _oneHandedArrowCatcher.Initialize("{=a94mkNNk}Arrow Catcher", DefaultSkills.OneHanded, GetTierCost(5), _oneHandedShieldWall, "{=dcsschkC}Larger shield protection area against projectiles.", SkillEffect.PerkRole.Personal, 0.01f, SkillEffect.EffectIncrementType.Add, "{=uz7KxUlP}Larger shield protection area against projectiles for troops in your formation.", SkillEffect.PerkRole.Captain, 0.01f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.ShieldUser);
            _oneHandedMilitaryTradition.Initialize("{=Fc7OsyZ8}Military Tradition", DefaultSkills.OneHanded, GetTierCost(6), _oneHandedCorpsACorps, "{=0A6BUASZ}{VALUE} daily experience to infantry in your party.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add, "{=B2msxAju}{VALUE}% garrison wages in the governed settlement.", SkillEffect.PerkRole.Governor, -0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _oneHandedCorpsACorps.Initialize("{=M3aNEkBJ}Corps-a-corps", DefaultSkills.OneHanded, GetTierCost(6), _oneHandedMilitaryTradition, "{=8jHJeh8z}{VALUE}% of the total experience gained as a bonus to infantry after battles.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=wBgpln4f}{VALUE} garrison limit in the governed settlement.", SkillEffect.PerkRole.Governor, 30f, SkillEffect.EffectIncrementType.Add);
            _oneHandedStandUnited.Initialize("{=d8qjwKza}Stand United", DefaultSkills.OneHanded, GetTierCost(7), _oneHandedLeadByExample, "{=JZ8ihtoa}{VALUE} starting battle morale to troops in your party if you are outnumbered.", SkillEffect.PerkRole.PartyLeader, 8f, SkillEffect.EffectIncrementType.Add, "{=5aVPqukr}{VALUE}% security provided by troops in the garrison of the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _oneHandedLeadByExample.Initialize("{=bOhbWapX}Lead by example", DefaultSkills.OneHanded, GetTierCost(7), _oneHandedStandUnited, "{=V97vqbIb}{VALUE}% experience to troops in your party after battle.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=g5nnybjz}{VALUE} starting battle morale to troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _oneHandedSteelCoreShields.Initialize("{=rSATpMpq}Steel Core Shields", DefaultSkills.OneHanded, GetTierCost(8), _oneHandedFleetOfFoot, "{=q2gybZYy}{VALUE}% damage to your shields.", SkillEffect.PerkRole.Personal, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=Bb4L971j}{VALUE}% damage to shields of infantry troops in your formation.", SkillEffect.PerkRole.Captain, -0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ShieldUser);
            _oneHandedFleetOfFoot.Initialize("{=OtdkOGur}Fleet of Foot", DefaultSkills.OneHanded, GetTierCost(8), _oneHandedSteelCoreShields, "{=V53EYEXx}{VALUE}% combat movement speed.", SkillEffect.PerkRole.Personal, 0.04f, SkillEffect.EffectIncrementType.AddFactor, "{=1QsZq9UW}{VALUE}% movement speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.04f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _oneHandedDeadlyPurpose.Initialize("{=xpGoduJq}Deadly Purpose", DefaultSkills.OneHanded, GetTierCost(9), _oneHandedUnwaveringDefense, "{=CTqO5MBf}{VALUE}% damage with one handed weapons.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=fcmt2U5u}{VALUE}% melee weapon damage by infantry in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.Melee);
            _oneHandedUnwaveringDefense.Initialize("{=yFbEDUyb}Unwavering Defense", DefaultSkills.OneHanded, GetTierCost(9), _oneHandedDeadlyPurpose, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=aeNhsyD7}{VALUE} hit points to infantry in your party.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _oneHandedPrestige.Initialize("{=DSKtsYPi}Prestige", DefaultSkills.OneHanded, GetTierCost(10), _oneHandedChinkInTheArmor, "{=LjeYTgX7}{VALUE}% damage against shields with one handed weapons.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=qxbBsB1a}{VALUE} party limit.", SkillEffect.PerkRole.PartyLeader, 15f, SkillEffect.EffectIncrementType.Add);
            _oneHandedChinkInTheArmor.Initialize("{=bBa0LB1D}Chink in the Armor", DefaultSkills.OneHanded, GetTierCost(10), _oneHandedPrestige, "{=KKsCor3D}{VALUE}% armor penetration with melee attacks.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=3a6tmImq}{VALUE}% recruitment cost of infantry.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _oneHandedWayOfTheSword.Initialize("{=nThmB3yB}Way of the Sword", DefaultSkills.OneHanded, GetTierCost(11), null, "{=jan55Git}{VALUE}% attack speed with one handed weapons for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=hr0TfX6o}{VALUE}% damage with one handed weapons for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedStrongGrip.Initialize("{=xDQTgPf0}Strong Grip", DefaultSkills.TwoHanded, GetTierCost(1), _twoHandedWoodChopper, "{=OpVRgL9n}{VALUE}% handling to two handed weapons.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=TmYKKarv}{VALUE} two handed skill to infantry troops in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.TwoHandedUser);
            _twoHandedWoodChopper.Initialize("{=J7oh7Vin}Wood Chopper", DefaultSkills.TwoHanded, GetTierCost(1), _twoHandedStrongGrip, "{=impj5bAM}{VALUE}% damage to shields with two handed weapons.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=4u69jBeE}{VALUE}% damage against shields by troops in your formation.", SkillEffect.PerkRole.Captain, 0.15f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _twoHandedOnTheEdge.Initialize("{=rkuAgPSA}On the Edge", DefaultSkills.TwoHanded, GetTierCost(2), _twoHandedHeadBasher, "{=R8Lnif8l}{VALUE}% swing speed with two handed weapons.", SkillEffect.PerkRole.Personal, 0.03f, SkillEffect.EffectIncrementType.AddFactor, "{=z5DZXHF7}{VALUE}% swing speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.Melee);
            _twoHandedHeadBasher.Initialize("{=E5bgLJcs}Head Basher", DefaultSkills.TwoHanded, GetTierCost(2), _twoHandedOnTheEdge, "{=qJBhadGi}{VALUE}% damage with two handed axes and maces.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=c86V0dch}{VALUE}% damage by infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _twoHandedShowOfStrength.Initialize("{=RlMqzqbS}Show of Strength", DefaultSkills.TwoHanded, GetTierCost(3), _twoHandedBaptisedInBlood, "{=7Nudvd8S}{VALUE}% chance of knocking the enemy down with a heavy hit.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=3a6tmImq}{VALUE}% recruitment cost of infantry.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedBaptisedInBlood.Initialize("{=miMZavW3}Baptised in Blood", DefaultSkills.TwoHanded, GetTierCost(3), _twoHandedShowOfStrength, "{=TR4ORD1T}{VALUE} experience to infantry in your party for each enemy you kill with a two handed weapon.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=rXb91Rwi}{VALUE}% experience to melee troops in your party after every battle.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedBeastSlayer.Initialize("{=NDtlE6PY}Beast Slayer", DefaultSkills.TwoHanded, GetTierCost(4), _twoHandedShieldBreaker, "{=fxTRlxBD}{VALUE}% damage to mounts with two handed weapons.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=lekpGqEA}{VALUE}% damage to mounts by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _twoHandedShieldBreaker.Initialize("{=bM9VX881}Shield breaker", DefaultSkills.TwoHanded, GetTierCost(4), _twoHandedBeastSlayer, "{=impj5bAM}{VALUE}% damage to shields with two handed weapons.", SkillEffect.PerkRole.Personal, 0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=ciCQnAj6}{VALUE}% damage against shields by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _twoHandedBerserker.Initialize("{=RssJTUpL}Berserker", DefaultSkills.TwoHanded, GetTierCost(5), _twoHandedConfidence, "{=D5RqqHIm}{VALUE}% damage with two handed weapons while you have less than half of your hit points.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=B2msxAju}{VALUE}% garrison wages in the governed settlement.", SkillEffect.PerkRole.Governor, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedConfidence.Initialize("{=2jnsxsv5}Confidence", DefaultSkills.TwoHanded, GetTierCost(5), _twoHandedBerserker, "{=QUXbhsxb}{VALUE}% damage with two handed weapons while you have more than 90% of your hit points.", SkillEffect.PerkRole.Personal, 0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=FX0GjiNa}{VALUE}% build speed to military projects in the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedProjectileDeflection.Initialize("{=rCCG4mSJ}Projectile Deflection", DefaultSkills.TwoHanded, GetTierCost(6), null, "{=YP8tN7nl}You can deflect projectiles with two handed swords by blocking.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Invalid, "{=FdSPC05Q}{VALUE}% experience to garrison troops in the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _twoHandedTerror.Initialize("{=nAlCj2m0}Terror", DefaultSkills.TwoHanded, GetTierCost(7), _twoHandedHope, "{=thGHcZMB}{VALUE}% battle morale effect to enemy troops with your two handed kills.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=POp8DAZD}{VALUE} prisoner limit.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _twoHandedHope.Initialize("{=lPuk6bao}Hope", DefaultSkills.TwoHanded, GetTierCost(7), _twoHandedTerror, "{=2zNrVsDj}{VALUE}% battle morale effect to friendly troops with your two handed kills.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=qxbBsB1a}{VALUE} party limit.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _twoHandedRecklessCharge.Initialize("{=ZGovl01w}Reckless Charge", DefaultSkills.TwoHanded, GetTierCost(8), _twoHandedThickHides, "{=1PC4D2fx}{VALUE}% damage bonus from speed with two handed weapons while on foot.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=b5l18lo7}{VALUE}% damage and movement speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _twoHandedThickHides.Initialize("{=j9OIuxxY}Thick Hides", DefaultSkills.TwoHanded, GetTierCost(8), _twoHandedRecklessCharge, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=ucHrYWaz}{VALUE} hit points to troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _twoHandedBladeMaster.Initialize("{=TtwAoHfw}Blade Master", DefaultSkills.TwoHanded, GetTierCost(9), _twoHandedVandal, "{=Pq0bhBUL}{VALUE}% damage with two handed weapons.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=l0ZGaUuI}{VALUE}% attack speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _twoHandedVandal.Initialize("{=czCRxHZy}Vandal", DefaultSkills.TwoHanded, GetTierCost(9), _twoHandedBladeMaster, "{=u57OuUZR}{VALUE}% armor penetration with your attacks.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=8q4vzfbH}{VALUE}% damage against destructible objects by troops in your formation.", SkillEffect.PerkRole.Captain, 0.2f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _twoHandedWayOfTheGreatAxe.Initialize("{=dbEb7iak}Way Of The Great Axe", DefaultSkills.TwoHanded, GetTierCost(10), null, "{=yRvF2Li4}{VALUE}% attack speed with two handed weapons for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=IM05Jahy}{VALUE}% damage with two handed weapons for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _polearmPikeman.Initialize("{=IFqtwpb0}Pikeman", DefaultSkills.Polearm, GetTierCost(1), _polearmCavalry, "{=NtzmIh0g}{VALUE}% damage with polearms on foot.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=Yu5hTuIN}{VALUE}% damage by infantry troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _polearmCavalry.Initialize("{=YVGtcLHF}Cavalry", DefaultSkills.Polearm, GetTierCost(1), _polearmPikeman, "{=IaBTfvfc}{VALUE}% damage with polearms while mounted.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=ywc8frAo}{VALUE}% damage by cavalry troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted);
            _polearmBraced.Initialize("{=dU7haWkI}Braced", DefaultSkills.Polearm, GetTierCost(2), _polearmKeepAtBay, "{=mmFrvHRt}{VALUE}% chance of dismounting enemy cavalry with a heavy hit.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=OWXECmbt}{VALUE}% damage by infantry in your formation against cavalry.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _polearmKeepAtBay.Initialize("{=TaucWWCB}Keep at Bay", DefaultSkills.Polearm, GetTierCost(2), _polearmBraced, "{=ObFtbGZl}{VALUE}% chance of knocking enemies back with thrust attacks made with polearms.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=g9gTYB8u}{VALUE} militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _polearmSwiftSwing.Initialize("{=xM5aawCj}Swift Swing", DefaultSkills.Polearm, GetTierCost(3), _polearmCleanThrust, "{=7tdcIxYN}{VALUE}% swing speed with polearms.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=Tq0E9sSW}{VALUE}% swing speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.Melee);
            _polearmCleanThrust.Initialize("{=PeaiNrSu}Clean Thrust", DefaultSkills.Polearm, GetTierCost(3), _polearmSwiftSwing, "{=xEp10rIa}{VALUE}% thrust damage with polearms.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=apgpk6j1}{VALUE} polearm skill to infantry in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.PolearmUser);
            _polearmFootwork.Initialize("{=Yvk8a2tb}Footwork", DefaultSkills.Polearm, GetTierCost(4), _polearmHardKnock, "{=eDzl7r8u}{VALUE}% combat movement speed with polearms.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=1QsZq9UW}{VALUE}% movement speed to infantry in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _polearmHardKnock.Initialize("{=8DTKXbKw}Hard Knock", DefaultSkills.Polearm, GetTierCost(4), _polearmFootwork, "{=7Nudvd8S}{VALUE}% chance of knocking the enemy down with a heavy hit.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=aeNhsyD7}{VALUE} hit points to infantry in your party.", SkillEffect.PerkRole.PartyLeader, 3f, SkillEffect.EffectIncrementType.Add);
            _polearmSteedKiller.Initialize("{=8POWjrr6}Steed Killer", DefaultSkills.Polearm, GetTierCost(5), _polearmLancer, "{=5aE8sEnj}{VALUE}% damage to mounts with polearms.", SkillEffect.PerkRole.Personal, 0.7f, SkillEffect.EffectIncrementType.AddFactor, "{=JGGdnIRO}{VALUE}% damage to mounts with polearms by infantry in your formation.", SkillEffect.PerkRole.Captain, 0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.PolearmUser);
            _polearmLancer.Initialize("{=hchDYAKL}Lancer", DefaultSkills.Polearm, GetTierCost(5), _polearmSteedKiller, "{=I0hqrQuD}{VALUE}% damage bonus from speed with polearms while mounted.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=00mulBcs}{VALUE}% damage bonus from speed with polearms by troops in your formation.", SkillEffect.PerkRole.Captain, 0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.PolearmUser);
            _polearmSkewer.Initialize("{=o57z0zB9}Skewer", DefaultSkills.Polearm, GetTierCost(6), _polearmGuards, "{=dcVuMs9r}{VALUE}% chance of your lance staying couched after a kill.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=buFin46y}{VALUE} daily security in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _polearmGuards.Initialize("{=vquApOWo}Guards", DefaultSkills.Polearm, GetTierCost(6), _polearmSkewer, "{=VB0GJijE}{VALUE}% damage when you hit an enemy in the head with a polearm.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=Ux90sIph}{VALUE}% experience gain to garrisoned cavalry in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _polearmStandardBearer.Initialize("{=Vv81gkWN}Standard Bearer", DefaultSkills.Polearm, GetTierCost(7), _polearmPhalanx, "{=RbDAfDsF}{VALUE}% battle morale loss to troops in your formation.", SkillEffect.PerkRole.Captain, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=V2v4ZMDT}{VALUE}% wages to garrisoned infantry in the governed settlement.", SkillEffect.PerkRole.Governor, -0.2f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.None);
            _polearmPhalanx.Initialize("{=5vs3qlQ8}Phalanx", DefaultSkills.Polearm, GetTierCost(7), _polearmStandardBearer, "{=3zzWzQcO}{VALUE} melee weapon skills to troops in your party while in shield wall formation.", SkillEffect.PerkRole.PartyLeader, 30f, SkillEffect.EffectIncrementType.Add, "{=yank0KD9}{VALUE}% damage with polearms by troops in your formation.", SkillEffect.PerkRole.Captain, 0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.PolearmUser);
            _polearmHardyFrontline.Initialize("{=NtMEk0lA}Hardy Frontline", DefaultSkills.Polearm, GetTierCost(8), _polearmDrills, "{=ucHrYWaz}{VALUE} hit points to troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add, "{=3a6tmImq}{VALUE}% recruitment cost of infantry.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _polearmDrills.Initialize("{=JpiQagYa}Drills", DefaultSkills.Polearm, GetTierCost(8), _polearmHardyFrontline, "{=g9gTYB8u}{VALUE} militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, "{=x3SJTtDj}{VALUE} bonus daily experience to troops in your party.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _polearmSureFooted.Initialize("{=bdzt4TcN}Sure Footed", DefaultSkills.Polearm, GetTierCost(9), _polearmUnstoppableForce, "{=QqVLsf0N}{VALUE}% charge damage taken.", SkillEffect.PerkRole.Personal, -0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=Dilnx8Es}{VALUE}% charge damage taken by troops in your formation.", SkillEffect.PerkRole.Captain, -0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _polearmUnstoppableForce.Initialize("{=Jat5GFDi}Unstoppable Force", DefaultSkills.Polearm, GetTierCost(9), _polearmSureFooted, "{=cUaUTwx5}Triple couch lance damage against shields.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.AddFactor, "{=jaLOtaRh}{VALUE}% damage bonus from speed with polearms to cavalry in your formation.", SkillEffect.PerkRole.Captain, 0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.PolearmUser);
            _polearmCounterweight.Initialize("{=BazrgEOj}Counterweight", DefaultSkills.Polearm, GetTierCost(10), _polearmSharpenTheTip, "{=02IdNzbt}{VALUE}% handling of swingable polearms.", SkillEffect.PerkRole.Personal, 0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=uZPweUQg}{VALUE} polearm skill to troops in your formation.", SkillEffect.PerkRole.Captain, 20f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.PolearmUser);
            _polearmSharpenTheTip.Initialize("{=ljduhdzj}Sharpen the Tip", DefaultSkills.Polearm, GetTierCost(10), _polearmCounterweight, "{=sbkrplXi}{VALUE}% damage with thrust attacks made with polearms.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=wLrF0mzr}{VALUE}% damage with thrust attacks by infantry troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot | TroopUsageFlags.Melee);
            _polearmWayOfTheSpear.Initialize("{=YnimoRlg}Way of the Spear", DefaultSkills.Polearm, GetTierCost(11), null, "{=x1T8wWNU}{VALUE}% attack speed with polearms for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=UB67Ye3r}{VALUE}% damage with polearms for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _bowBowControl.Initialize("{=1zteHA7R}Bow Control", DefaultSkills.Bow, GetTierCost(1), _bowDeadAim, "{=4PdKPMNc}{VALUE}% accuracy penalty while moving.", SkillEffect.PerkRole.Personal, -0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=0DaxFvnw}{VALUE}% damage with bows by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowDeadAim.Initialize("{=FVLymWqW}Dead Aim", DefaultSkills.Bow, GetTierCost(1), _bowBowControl, "{=hmbeQW4v}{VALUE}% headshot damage with bows.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=QbWK6sWo}{VALUE} Bow skill to troops in your formation.", SkillEffect.PerkRole.Captain, 20f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowBodkin.Initialize("{=PDM8MzCA}Bodkin", DefaultSkills.Bow, GetTierCost(2), _bowNockingPoint, "{=EU3No7XM}{VALUE}% armor penetration with bows.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=KfLZ8Hbw}{VALUE}% armor penetration with bows by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowNockingPoint.Initialize("{=bS8alS24}Nocking Point", DefaultSkills.Bow, GetTierCost(2), _bowBodkin, "{=zady0hI7}{VALUE}% movement speed penalty while reloading.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=kaJ6SJeI}{VALUE}% movement speed to archers in your formation.", SkillEffect.PerkRole.Captain, 0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowRapidFire.Initialize("{=Kc9oatmM}Rapid Fire", DefaultSkills.Bow, GetTierCost(3), _bowQuickAdjustments, "{=0vqPUXfr}{VALUE}% reload speed with bows.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=KOlw0Na1}{VALUE}% reload speed to troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Ranged);
            _bowQuickAdjustments.Initialize("{=nOZerIfl}Quick Adjustments", DefaultSkills.Bow, GetTierCost(3), _bowRapidFire, "{=LAxaYQzv}{VALUE}% accuracy penalty while rotating.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=qC298I3g}{VALUE}% accuracy penalty to archers in your formation.", SkillEffect.PerkRole.Captain, -0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowMerryMen.Initialize("{=ssljPTUr}Merry Men", DefaultSkills.Bow, GetTierCost(4), _bowMountedArchery, "{=NouDSrXE}{VALUE} party size.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add, "{=g9gTYB8u}{VALUE} militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _bowMountedArchery.Initialize("{=WEUSMkCp}Mounted Archery", DefaultSkills.Bow, GetTierCost(4), _bowMerryMen, "{=XITAY0KG}{VALUE}% accuracy penalty using bows while mounted.", SkillEffect.PerkRole.Personal, -0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=6XDcZUsb}{VALUE}% security provided by archers in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _bowTrainer.Initialize("{=UE2X5rAy}Trainer", DefaultSkills.Bow, GetTierCost(5), _bowStrongBows, "{=xoVR3Xr3}Daily Bow skill experience bonus to the party member with the lowest bow skill.", SkillEffect.PerkRole.PartyLeader, 6f, SkillEffect.EffectIncrementType.Add, "{=TcMme3Da}{VALUE} daily experience to archers in your party.", SkillEffect.PerkRole.PartyLeader, 3f, SkillEffect.EffectIncrementType.Add);
            _bowStrongBows.Initialize("{=dqbbT5DK}Strong bows", DefaultSkills.Bow, GetTierCost(5), _bowTrainer, "{=FXWn934b}{VALUE}% damage with bows.", SkillEffect.PerkRole.Personal, 0.08f, SkillEffect.EffectIncrementType.AddFactor, "{=yppPCR1z}{VALUE}% damage with bows by tier 3+ troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.BowUser);
            _bowDiscipline.Initialize("{=D867vF71}Discipline", DefaultSkills.Bow, GetTierCost(6), _bowHunterClan, "{=sHiIwnOb}{VALUE}% aiming duration without losing accuracy.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=F7bbkYx4}{VALUE} loyalty per day in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _bowHunterClan.Initialize("{=AAy1oX7z}Hunter Clan", DefaultSkills.Bow, GetTierCost(6), _bowDiscipline, "{=kLVpYR0z}{VALUE}% damage with bows to mounts.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=1FPpHasQ}{VALUE}% garrison wages in the governed castle.", SkillEffect.PerkRole.Governor, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _bowSkirmishPhaseMaster.Initialize("{=oVdoauUE}Skirmish Phase Master", DefaultSkills.Bow, GetTierCost(7), _bowEagleEye, "{=R93r6aV7}{VALUE}% damage taken from projectiles.", SkillEffect.PerkRole.Personal, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=pHdIgnYu}{VALUE}% damage taken from projectiles by ranged troops in your formation.", SkillEffect.PerkRole.Captain, -0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Ranged);
            _bowEagleEye.Initialize("{=lq67KjSY}Eagle Eye", DefaultSkills.Bow, GetTierCost(7), _bowSkirmishPhaseMaster, "{=xTDnna2J}{VALUE}% zoom with bows.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=1Z8oWbo7}{VALUE}% visual range on the campaign map.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _bowBullsEye.Initialize("{=QH77Weyq}Bulls Eye", DefaultSkills.Bow, GetTierCost(8), _bowRenownedArcher, "{=OFMYfDPZ}{VALUE}% bonus experience to ranged troops in your party after every battle.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=mmH70R4H}{VALUE} daily experience to garrison troops in the governed settlement.", SkillEffect.PerkRole.Governor, 3f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Ranged);
            _bowRenownedArcher.Initialize("{=aIKVpGvE}Renowned Archer", DefaultSkills.Bow, GetTierCost(8), _bowBullsEye, "{=kmdxvkEV}{VALUE}% starting battle morale to ranged troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=bnnWpLbk}{VALUE}% recruitment and upgrade cost to ranged troops.", SkillEffect.PerkRole.PartyLeader, -0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _bowHorseMaster.Initialize("{=dbUybDTG}Horse Master", DefaultSkills.Bow, GetTierCost(9), _bowDeepQuivers, "{=LiaRnWJZ}You can now use all bows on horseback.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Invalid, "{=0J9dgA7j}{VALUE} bow skill to horse archers in your formation", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.BowUser);
            _bowDeepQuivers.Initialize("{=h83ZU95t}Deep Quivers", DefaultSkills.Bow, GetTierCost(9), _bowHorseMaster, "{=YOQQR1bJ}{VALUE} extra arrows per quiver.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.Add, "{=CBVfPRRe}{VALUE} extra arrow per quiver to troops in your party.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _bowQuickDraw.Initialize("{=vnJndBgT}Quick Draw", DefaultSkills.Bow, GetTierCost(10), _bowRangersSwiftness, "{=jU084S5S}{VALUE}% aiming speed with bows.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=tsh4RXNa}{VALUE}% tax gain in the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _bowRangersSwiftness.Initialize("{=p12tSfCC}Ranger's Swiftness", DefaultSkills.Bow, GetTierCost(10), _bowQuickDraw, "{=RQd005zy}Equipped bows do not slow you down.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Invalid, "{=6XDcZUsb}{VALUE}% security provided by archers in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _bowDeadshot.Initialize("{=rsKhbZpJ}Deadshot", DefaultSkills.Bow, GetTierCost(11), null, "{=HCqd0IOt}{VALUE}% reload speed with bows for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=hiFadSiC}{VALUE}% damage with bows for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowPiercer.Initialize("{=v8RwzwqD}Piercer", DefaultSkills.Crossbow, GetTierCost(1), _crossbowMarksmen, "{=j3J0Hbax}Your crossbow attacks ignore armors below 20.", SkillEffect.PerkRole.Personal, 20f, SkillEffect.EffectIncrementType.Add, "{=CLBXxPdh}{VALUE}% recruitment cost of ranged troops.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowMarksmen.Initialize("{=IUGVdu64}Marksmen", DefaultSkills.Crossbow, GetTierCost(1), _crossbowPiercer, "{=LCsu8rXa}{VALUE}% faster aiming with crossbows.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=kmdxvkEV}{VALUE}% starting battle morale to ranged troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowUnhorser.Initialize("{=75vJc53f}Unhorser", DefaultSkills.Crossbow, GetTierCost(2), _crossbowWindWinder, "{=97nYJcKO}{VALUE}% crossbow damage to mounts.", SkillEffect.PerkRole.Personal, 0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=laWxqjBP}{VALUE}% damage against mounts to crossbow troops in your formation.", SkillEffect.PerkRole.Captain, 0.2f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowWindWinder.Initialize("{=1bw2uw8H}Wind Winder", DefaultSkills.Crossbow, GetTierCost(2), _crossbowUnhorser, "{=3cBX5x0x}{VALUE}% reload speed with crossbows.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=YHjdf1uO}{VALUE}% crossbow reload speed to troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowDonkeysSwiftness.Initialize("{=uANbQUxg}Donkey's Swiftness", DefaultSkills.Crossbow, GetTierCost(3), _crossbowSheriff, "{=Af7zOV2l}{VALUE}% accuracy loss while moving.", SkillEffect.PerkRole.Personal, -0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=aIyRxlCf}{VALUE} crossbow skill to troops in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowSheriff.Initialize("{=leaowE4D}Sheriff", DefaultSkills.Crossbow, GetTierCost(3), _crossbowDonkeysSwiftness, "{=W7PaF7Lr}{VALUE}% headshot damage with crossbows.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=HB2wwuj6}{VALUE}% crossbow damage to infantry by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _crossbowPeasantLeader.Initialize("{=2rPMYl7Y}Peasant Leader", DefaultSkills.Crossbow, GetTierCost(4), _crossbowRenownMarksmen, "{=4CSaYB8H}{VALUE}% battle morale to tier 1 to 3 troops", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=xuUbaa9f}{VALUE}% garrisoned ranged troop wages in the governed settlement.", SkillEffect.PerkRole.Governor, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowRenownMarksmen.Initialize("{=ICkvftaM}Renowned Marksmen", DefaultSkills.Crossbow, GetTierCost(4), _crossbowPeasantLeader, "{=uj52xbdr}{VALUE} daily experience to ranged troops in your party.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add, "{=i4GboakR}{VALUE}% security provided by ranged troops in the garrison of the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowFletcher.Initialize("{=FA5QlTvm}Fletcher", DefaultSkills.Crossbow, GetTierCost(5), _crossbowPuncture, "{=wvQbeHpp}{VALUE} bolts per quiver.", SkillEffect.PerkRole.Personal, 4f, SkillEffect.EffectIncrementType.Add, "{=j3Hcp9RQ}{VALUE} bolts per quiver to troops in your party.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add);
            _crossbowPuncture.Initialize("{=jjkJyKoy}Puncture", DefaultSkills.Crossbow, GetTierCost(5), _crossbowFletcher, "{=bVUQyN8t}{VALUE}% armor penetration with crossbows.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=KhCU9FZU}{VALUE}% armor penetration with crossbows by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowLooseAndMove.Initialize("{=SKUPHeAw}Loose and Move", DefaultSkills.Crossbow, GetTierCost(6), _crossbowDeftHands, "{=BbaidhT4}Equipped crossbows do not slow you down.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=loVfqss6}{VALUE}% movement speed to ranged troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Ranged);
            _crossbowDeftHands.Initialize("{=NYHeygaj}Deft Hands", DefaultSkills.Crossbow, GetTierCost(6), _crossbowLooseAndMove, "{=VY7WQSgu}{VALUE}% resistance to getting staggered while reloading your crossbow.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=wUov3khT}{VALUE}% resistance to getting staggered while reloading crossbows to troops in your formation.", SkillEffect.PerkRole.Captain, 0.5f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowCounterFire.Initialize("{=grgnisK4}Counter Fire", DefaultSkills.Crossbow, GetTierCost(7), _crossbowMountedCrossbowman, "{=8ieLwTyG}{VALUE}% projectile damage taken while equipped with a crossbow.", SkillEffect.PerkRole.Personal, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=zJHhHRBw}{VALUE}% damage taken from projectiles by your troops.", SkillEffect.PerkRole.Captain, -0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _crossbowMountedCrossbowman.Initialize("{=UZHvbYTr}Mounted Crossbowman", DefaultSkills.Crossbow, GetTierCost(7), _crossbowCounterFire, "{=ZTt5Es7q}You can reload any crossbow on horseback.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=i36Gg6mW}{VALUE}% experience gained to ranged troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowSteady.Initialize("{=Ye9lbBr3}Steady", DefaultSkills.Crossbow, GetTierCost(8), _crossbowLongShots, "{=wFWdhNCN}{VALUE}% accuracy penalty with crossbows while mounted.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=q5IMLou4}{VALUE}% tariff gain in the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowLongShots.Initialize("{=Y5KXWHJY}Long Shots", DefaultSkills.Crossbow, GetTierCost(8), _crossbowSteady, "{=Stykk4VR}{VALUE}% more zoom with crossbows.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.AddFactor, "{=xwA6Om0Y}{VALUE} daily militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _crossbowHammerBolts.Initialize("{=FjMS9Mbz}Hammer Bolts", DefaultSkills.Crossbow, GetTierCost(9), _crossbowPavise, "{=K8VhWN85}{VALUE}% chance of dismounting enemy cavalry with a heavy hit from your crossbow.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=yz8xogMc}{VALUE}% damage with crossbows by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowPavise.Initialize("{=2667CwaK}Pavise", DefaultSkills.Crossbow, GetTierCost(9), _crossbowHammerBolts, "{=pr5vaFNc}{VALUE}% chance of blocking projectiles from behind with a shield on your back.", SkillEffect.PerkRole.Personal, 0.75f, SkillEffect.EffectIncrementType.AddFactor, "{=Q8LSfvIO}{VALUE}% accuracy to ballistas in the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _crossbowTerror.Initialize("{=nAlCj2m0}Terror", DefaultSkills.Crossbow, GetTierCost(10), _crossbowPickedShots, "{=NGFbn4Qx}{VALUE}% chance of increasing the siege bombardment casualties per hit by 1.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=sUFw8cDt}{VALUE}% morale loss to enemy due to crossbow kills by troops in your formation.", SkillEffect.PerkRole.Captain, 0.25f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _crossbowPickedShots.Initialize("{=nGWmyZCs}Picked Shots", DefaultSkills.Crossbow, GetTierCost(10), _crossbowTerror, "{=YG7HavAk}{VALUE}% wages of tier 4+ ranged troops.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=Yxchzh3a}{VALUE} hit points to ranged troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _crossbowMightyPull.Initialize("{=ZFtyxzT5}Mighty Pull", DefaultSkills.Crossbow, GetTierCost(11), null, "{=Jtx8Czql}{VALUE}% reload speed with crossbows for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=WUaSub02}{VALUE}% damage with crossbows for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _throwingQuickDraw.Initialize("{=vnJndBgT}Quick Draw", DefaultSkills.Throwing, GetTierCost(1), _throwingShieldBreaker, "{=Fnbf4ShY}{VALUE}% draw speed with throwing weapons.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=UkADS8nQ}{VALUE}% draw speed with throwing weapons to troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingShieldBreaker.Initialize("{=DeWp2GjP}Shield Breaker", DefaultSkills.Throwing, GetTierCost(1), _throwingQuickDraw, "{=wPwbyBra}{VALUE}% damage to shields with throwing weapons.", SkillEffect.PerkRole.Personal, 0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=inFSdSiC}{VALUE}% damage to shields with throwing weapons by troops in your formation.", SkillEffect.PerkRole.Captain, 0.08f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingHunter.Initialize("{=xnDWqYKW}Hunter", DefaultSkills.Throwing, GetTierCost(2), _throwingFlexibleFighter, "{=FPdjh976}{VALUE}% damage to mounts with throwing weapons.", SkillEffect.PerkRole.Personal, 0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=ZgvRAR0u}{VALUE}% damage to mounts with throwing weapons by troops in your formation.", SkillEffect.PerkRole.Captain, 0.08f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingFlexibleFighter.Initialize("{=mPPWRjCZ}Flexible Fighter", DefaultSkills.Throwing, GetTierCost(2), _throwingHunter, "{=6rEsV6SZ}{VALUE}% damage while using throwing weapons as melee.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=SSm1kkaB}{VALUE} Control skills of infantry, {VALUE} Vigor skills of archers in your formation.", SkillEffect.PerkRole.Captain, 15f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _throwingMountedSkirmisher.Initialize("{=l1I748Fn}Mounted Skirmisher", DefaultSkills.Throwing, GetTierCost(3), _throwingWellPrepared, "{=JsdkJbDL}{VALUE}% accuracy penalty with throwing weapons while mounted.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=0L96iq1b}{VALUE}% damage with throwing weapons by mounted troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.ThrownUser);
            _throwingWellPrepared.Initialize("{=bloxcikL}Well Prepared", DefaultSkills.Throwing, GetTierCost(3), _throwingMountedSkirmisher, "{=nKw4eb22}{VALUE} ammunition for throwing weapons.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=1lEckrPh}{VALUE} ammunition for throwing weapons to troops in your party.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _throwingRunningThrow.Initialize("{=OcaW12fJ}Running Throw", DefaultSkills.Throwing, GetTierCost(4), _throwingKnockOff, "{=Z4maWcyl}{VALUE}% damage bonus from speed with throwing weapons.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.Add, "{=a5CWbHsd}{VALUE} throwing skill to troops in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingKnockOff.Initialize("{=Gn3KBN8L}Knock Off", DefaultSkills.Throwing, GetTierCost(4), _throwingRunningThrow, "{=JqGLpG2L}{VALUE}% chance of dismounting enemy cavalry with a heavy hit with your throwing weapons.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=cJEbenVQ}{VALUE}% throwing weapon damage to cavalry by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.ThrownUser);
            _throwingSkirmisher.Initialize("{=s9oED1IR}Skirmisher", DefaultSkills.Throwing, GetTierCost(5), _throwingSaddlebags, "{=O6UPQskm}{VALUE}% damage taken by ranged attacks while holding a throwing weapon.", SkillEffect.PerkRole.Personal, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=ZUYOXMFo}{VALUE}% damage taken by ranged attacks to troops in your formation.", SkillEffect.PerkRole.Captain, -0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _throwingSaddlebags.Initialize("{=VUxFbEiW}Saddlebags", DefaultSkills.Throwing, GetTierCost(5), _throwingSkirmisher, "{=bFNFpd2d}{VALUE} ammunition for throwing weapons when you start a battle mounted.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.Add, "{=0jbhAPub}{VALUE} daily experience to infantry troops in your party.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _throwingFocus.Initialize("{=throwingskillfocus}Focus", DefaultSkills.Throwing, GetTierCost(6), _throwingLastHit, "{=hJdHb0G7}{VALUE}% zoom with throwing weapons.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=buFin46y}{VALUE} daily security in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _throwingLastHit.Initialize("{=IsHyjvSq}Last Hit", DefaultSkills.Throwing, GetTierCost(6), _throwingFocus, "{=PleZrXuO}{VALUE}% damage to enemies with less than half of their hit points left.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=g5nnybjz}{VALUE} starting battle morale to troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _throwingHeadHunter.Initialize("{=iARYMyuq}Head Hunter", DefaultSkills.Throwing, GetTierCost(7), _throwingThrowingCompetitions, "{=UsD0y74h}{VALUE}% headshot damage with thrown weapons.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=j7inOz04}{VALUE}% recruitment cost of tier 2+ troops.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _throwingThrowingCompetitions.Initialize("{=cC8iTtg5}Throwing Competitions", DefaultSkills.Throwing, GetTierCost(7), _throwingHeadHunter, "{=W0cfTJQv}{VALUE}% upgrade cost of infantry troops.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=g9gTYB8u}{VALUE} militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _throwingResourceful.Initialize("{=w53LSPJ1}Resourceful", DefaultSkills.Throwing, GetTierCost(8), _throwingSplinters, "{=nKw4eb22}{VALUE} ammunition for throwing weapons.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.Add, "{=P0iCmQAf}{VALUE}% experience from battles to troops in your party equipped with throwing weapons.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _throwingSplinters.Initialize("{=b6W74uyR}Splinters", DefaultSkills.Throwing, GetTierCost(8), _throwingResourceful, "{=ymKzbcfB}Triple damage against shields with throwing axes.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.AddFactor, "{=inFSdSiC}{VALUE}% damage to shields with throwing weapons by troops in your formation.", SkillEffect.PerkRole.Captain, 0.5f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingPerfectTechnique.Initialize("{=BCoQgZvG}Perfect Technique", DefaultSkills.Throwing, GetTierCost(9), _throwingLongReach, "{=cr1AipGT}{VALUE}% travel speed to your throwing weapons.", SkillEffect.PerkRole.Personal, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=rkHnKmSK}{VALUE}% travel speed to throwing weapons of troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingLongReach.Initialize("{=9iLyu1kp}Long Reach", DefaultSkills.Throwing, GetTierCost(9), _throwingPerfectTechnique, "{=lEi1hIIt}You can pick up items from the ground while mounted.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=VgkFpMxF}{VALUE}% morale and renown gained from battles won.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _throwingWeakSpot.Initialize("{=cPPLAz8l}Weak Spot", DefaultSkills.Throwing, GetTierCost(10), _throwingImpale, "{=z4zrwc9K}{VALUE}% armor penetration with throwing weapons.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=b97khG1u}{VALUE}% armor penetration with throwing weapons by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingImpale.Initialize("{=tYAYIRjr}Impale", DefaultSkills.Throwing, GetTierCost(10), _throwingWeakSpot, "{=D9coiXFt}Javelins you throw can penetrate shields.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=xlddWniu}{VALUE}% damage with throwing weapons by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _throwingUnstoppableForce.Initialize("{=Jat5GFDi}Unstoppable Force", DefaultSkills.Throwing, GetTierCost(11), null, "{=4MPzgKqE}{VALUE}% travel speed to your throwing weapons for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.002f, SkillEffect.EffectIncrementType.AddFactor, "{=pDvv90Th}{VALUE}% damage with throwing weapons for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingFullSpeed.Initialize("{=kzy9Iduz}Full Speed", DefaultSkills.Riding, GetTierCost(1), _ridingNimbleSteed, "{=wKSA8Qob}{VALUE}% charge damage dealt.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=DS8fM8Op}{VALUE}% charge damage dealt by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted);
            _ridingNimbleSteed.Initialize("{=cXlnH1Jp}Nimble Steed", DefaultSkills.Riding, GetTierCost(1), _ridingFullSpeed, "{=f8R0Hkxa}{VALUE}% maneuvering.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=zjctOvv8}{VALUE} riding skill to troops in your formation.", SkillEffect.PerkRole.Captain, 30f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted);
            _ridingWellStraped.Initialize("{=3lfS4iCZ}Well Strapped", DefaultSkills.Riding, GetTierCost(2), _ridingVeterinary, "{=oKWft2IH}{VALUE}% chance of your mount dying or becoming lame after it falls in battle.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=IkhQPr3Z}{VALUE} daily loyalty to the governed settlement.", SkillEffect.PerkRole.Governor, 0.5f, SkillEffect.EffectIncrementType.Add);
            _ridingVeterinary.Initialize("{=ZaSmz64G}Veterinary", DefaultSkills.Riding, GetTierCost(2), _ridingWellStraped, "{=tvRYz5lr}{VALUE}% hit points to your mount.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=b0w3Fruf}{VALUE}% hit points to mounts of troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingNomadicTraditions.Initialize("{=PB5iowxh}Nomadic Traditions", DefaultSkills.Riding, GetTierCost(3), _ridingDeeperSacks, "{=Wrmqdoz8}{VALUE}% party speed bonus from footmen on horses.", SkillEffect.PerkRole.PartyLeader, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=fPB1WdEy}{VALUE}% melee damage bonus from speed to mounted troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Melee);
            _ridingDeeperSacks.Initialize("{=VWYrJCje}Deeper Sacks", DefaultSkills.Riding, GetTierCost(3), _ridingNomadicTraditions, "{=Yp4zv2ib}{VALUE}% carrying capacity for pack animals in your party.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=UC6JdOXk}{VALUE}% trade penalty for mounts.", SkillEffect.PerkRole.PartyLeader, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingSagittarius.Initialize("{=jbPZTSP4}Sagittarius", DefaultSkills.Riding, GetTierCost(4), _ridingSweepingWind, "{=nc3carw2}{VALUE}% accuracy penalty while mounted.", SkillEffect.PerkRole.Personal, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=r0epmJJJ}{VALUE}% accuracy penalty to mounted troops in your formation.", SkillEffect.PerkRole.Captain, -0.15f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Ranged);
            _ridingSweepingWind.Initialize("{=gL7Ltjpc}Sweeping Wind", DefaultSkills.Riding, GetTierCost(4), _ridingSagittarius, "{=lTafHBwZ}{VALUE}% top speed to your mount.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=Q74nUiFJ}{VALUE}% party speed.", SkillEffect.PerkRole.PartyLeader, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingReliefForce.Initialize("{=g5I4qyjw}Relief Force", DefaultSkills.Riding, GetTierCost(5), null, "{=tx37EgiO}{VALUE} starting battle morale when you join an ongoing battle of your allies.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=RVNPXS46}{VALUE}% security provided by mounted troops in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingMountedWarrior.Initialize("{=ixqTFMVA}Mounted Warrior", DefaultSkills.Riding, GetTierCost(6), _ridingHorseArcher, "{=1GwI0hcG}{VALUE}% mounted melee damage.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=f6sgEuS0}{VALUE}% mounted melee damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Melee);
            _ridingHorseArcher.Initialize("{=ugJfuabA}Horse Archer", DefaultSkills.Riding, GetTierCost(6), _ridingMountedWarrior, "{=G4xCqSNG}{VALUE}% ranged damage while mounted.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=DFMsbFrB}{VALUE}% damage by mounted archers in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.BowUser);
            _ridingShepherd.Initialize("{=I5LyCJzj}Shepherd", DefaultSkills.Riding, GetTierCost(7), _ridingBreeder, "{=aiIPozp6}{VALUE}% herding speed penalty.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=YhZj58ut}{VALUE}% chance of producing tier 2 horses in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingBreeder.Initialize("{=4Pbfs4rV}Breeder", DefaultSkills.Riding, GetTierCost(7), _ridingShepherd, "{=Cpaw42pv}{VALUE}% daily chance of animals in your party reproducing.", SkillEffect.PerkRole.PartyLeader, 0.01f, SkillEffect.EffectIncrementType.AddFactor, "{=665JbYIC}{VALUE}% production rate to villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingThunderousCharge.Initialize("{=3MLtqFPt}Thunderous Charge", DefaultSkills.Riding, GetTierCost(8), _ridingAnnoyingBuzz, "{=qvjCYY61}{VALUE}% battle morale penalty to enemies with mounted melee kills.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=fK9GFdM8}{VALUE}% battle morale penalty to enemies with mounted melee kills by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Melee);
            _ridingAnnoyingBuzz.Initialize("{=Okibjv5n}Annoying Buzz", DefaultSkills.Riding, GetTierCost(8), _ridingThunderousCharge, "{=nbbQfbli}{VALUE}% battle morale penalty to enemies with mounted ranged kills.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=wtdwqO8i}{VALUE}% battle morale penalty to enemies with mounted ranged kills by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted | TroopUsageFlags.Ranged);
            _ridingMountedPatrols.Initialize("{=1z3oRPQu}Mounted Patrols", DefaultSkills.Riding, GetTierCost(9), _ridingCavalryTactics, "{=pAkHwm3k}{VALUE}% escape chance to prisoners in your party.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=mNbAR4uk}{VALUE}% escape chance to prisoners in the governed settlement.", SkillEffect.PerkRole.Governor, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingCavalryTactics.Initialize("{=ZMxAGDKU}Cavalry Tactics", DefaultSkills.Riding, GetTierCost(9), _ridingMountedPatrols, "{=oboqflX9}{VALUE}% volunteering rate of cavalry troops in the settlements governed by your clan.", SkillEffect.PerkRole.ClanLeader, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=mXGozqqL}{VALUE}% wages of mounted troops in the governed settlement.", SkillEffect.PerkRole.Governor, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _ridingDauntlessSteed.Initialize("{=eYzTvFEH}Dauntless Steed", DefaultSkills.Riding, GetTierCost(10), _ridingToughSteed, "{=7uhottjU}{VALUE}% resistance to getting staggered while mounted.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=MEr2aoeC}{VALUE} armor to all equipped armor pieces of mounted troops in your formation.", SkillEffect.PerkRole.Captain, 5f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted);
            _ridingToughSteed.Initialize("{=vDNbHDfq}Tough Steed", DefaultSkills.Riding, GetTierCost(10), _ridingDauntlessSteed, "{=svkQsokb}{VALUE}% armor to your mount.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=Ful5cXFa}{VALUE} armor to mounts of troops in your formation.", SkillEffect.PerkRole.Captain, 10f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.Mounted);
            _ridingTheWayOfTheSaddle.Initialize("{=HvYgMtXO}The Way Of The Saddle", DefaultSkills.Riding, GetTierCost(11), null, "{=nXZktHa6}{VALUE} charge damage and maneuvering for every skill point above 250.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.Add);
            _athleticsMorningExercise.Initialize("{=ipwU1JT3}Morning Exercise", DefaultSkills.Athletics, GetTierCost(1), _athleticsWellBuilt, "{=V53EYEXx}{VALUE}% combat movement speed.", SkillEffect.PerkRole.Personal, 0.03f, SkillEffect.EffectIncrementType.AddFactor, "{=nRvR1Rpc}{VALUE}% combat movement speed to troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsWellBuilt.Initialize("{=bigS7KHi}Well Built", DefaultSkills.Athletics, GetTierCost(1), _athleticsMorningExercise, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=V4zyUiai}{VALUE} hit points to foot troops in your party.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _athleticsFury.Initialize("{=b0ak3yGV}Fury", DefaultSkills.Athletics, GetTierCost(2), _athleticsFormFittingArmor, "{=Epwmv89M}{VALUE}% weapon handling while on foot.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=LGFsDic7}{VALUE}% weapon handling to foot troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsFormFittingArmor.Initialize("{=tp3p7R8E}Form Fitting Armor", DefaultSkills.Athletics, GetTierCost(2), _athleticsFury, "{=86R9Ttgx}{VALUE}% armor weight.", SkillEffect.PerkRole.Personal, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=WpCx75Pc}{VALUE}% combat movement speed to tier 3+ foot troops in your formation.", SkillEffect.PerkRole.Captain, 0.04f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsImposingStature.Initialize("{=3hffzsoK}Imposing Stature", DefaultSkills.Athletics, GetTierCost(3), _athleticsStamina, "{=qCaIau4o}{VALUE}% persuasion chance.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=NouDSrXE}{VALUE} party size.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _athleticsStamina.Initialize("{=2lCLp5eo}Stamina", DefaultSkills.Athletics, GetTierCost(3), _athleticsImposingStature, "{=Lrm17UNm}{VALUE}% crafting stamina recovery rate.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=PNB9bHJd}{VALUE} prisoner limit and -10% escape chance to your prisoners.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _athleticsSprint.Initialize("{=864bKdc6}Sprint", DefaultSkills.Athletics, GetTierCost(4), _athleticsPowerful, "{=mWezTaa1}{VALUE}% combat movement speed when you have no shields and no ranged weapons equipped.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=zoNKoZDZ}{VALUE}% combat movement speed to infantry troops in your formation.", SkillEffect.PerkRole.Captain, 0.03f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsPowerful.Initialize("{=UCpyo9hw}Powerful", DefaultSkills.Athletics, GetTierCost(4), _athleticsSprint, "{=CglYgfiY}{VALUE}% damage with melee weapons.", SkillEffect.PerkRole.Personal, 0.04f, SkillEffect.EffectIncrementType.AddFactor, "{=eBmaa49a}{VALUE}% melee damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Melee);
            _athleticsSurgingBlow.Initialize("{=zrYFYDfj}Surging Blow", DefaultSkills.Athletics, GetTierCost(5), _athleticsBraced, "{=QiZfTNWJ}{VALUE}% damage bonus from speed while on foot.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=m6RcG1bD}{VALUE}% damage bonus from speed to troops in your formation.", SkillEffect.PerkRole.Captain, 0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsBraced.Initialize("{=dU7haWkI}Braced", DefaultSkills.Athletics, GetTierCost(5), _athleticsSurgingBlow, "{=QqVLsf0N}{VALUE}% charge damage taken.", SkillEffect.PerkRole.Personal, -0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=Dilnx8Es}{VALUE}% charge damage taken by troops in your formation.", SkillEffect.PerkRole.Captain, -0.3f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsWalkItOff.Initialize("{=0pyLfrGZ}Walk It Off", DefaultSkills.Athletics, GetTierCost(6), _athleticsAGoodDaysRest, "{=65b6daHW}{VALUE}% hit point regeneration while traveling.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=9Hv0q2lg}{VALUE} daily experience to foot troops while traveling.", SkillEffect.PerkRole.PartyLeader, 3f, SkillEffect.EffectIncrementType.Add);
            _athleticsAGoodDaysRest.Initialize("{=B7HwvV6L}A Good Days Rest", DefaultSkills.Athletics, GetTierCost(6), _athleticsWalkItOff, "{=cCXt1jce}{VALUE}% hit point regeneration while waiting in settlements.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=fyibGRUQ}{VALUE} daily experience to foot troops while waiting in settlements.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _athleticsDurable.Initialize("{=8AKmJwv7}Durable", DefaultSkills.Athletics, GetTierCost(7), _athleticsEnergetic, "{=4uqDestM}{VALUE} Endurance attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=m993aVvX}{VALUE} daily loyalty in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _athleticsEnergetic.Initialize("{=1YxFYg3s}Energetic", DefaultSkills.Athletics, GetTierCost(7), _athleticsDurable, "{=qPpN2wW8}{VALUE}% overburdened speed penalty.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=ULY7byYc}{VALUE}% hearth growth in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _athleticsSteady.Initialize("{=Ye9lbBr3}Steady", DefaultSkills.Athletics, GetTierCost(8), _athleticsStrong, "{=C8LhGtUJ}{VALUE} Control attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=rkQptw1O}{VALUE}% production in farms, mines, lumber camps and clay pits bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _athleticsStrong.Initialize("{=d5aK6Sv0}Strong", DefaultSkills.Athletics, GetTierCost(8), _athleticsSteady, "{=gtlygHIk}{VALUE} Vigor attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=yXaozMwY}{VALUE}% party speed by foot troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _athleticsStrongLegs.Initialize("{=guZWnzaV}Strong Legs", DefaultSkills.Athletics, GetTierCost(9), _athleticsStrongArms, "{=QIDr1cTd}{VALUE}% fall damage taken and +100% kick damage dealt.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=O3sh2iws}{VALUE}% food consumption in the governed settlement while under siege.", SkillEffect.PerkRole.Governor, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _athleticsStrongArms.Initialize("{=qBKmIyYx}Strong Arms", DefaultSkills.Athletics, GetTierCost(9), _athleticsStrongLegs, "{=Ztezot02}{VALUE}% damage with throwing weapons.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=a5CWbHsd}{VALUE} throwing skill to troops in your formation.", SkillEffect.PerkRole.Captain, 20f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.ThrownUser);
            _athleticsSpartan.Initialize("{=PX0Xufmr}Spartan", DefaultSkills.Athletics, GetTierCost(10), _athleticsIgnorePain, "{=NmGcIg3j}{VALUE}% resistance to getting staggered while on foot.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=6NHvsrrx}{VALUE}% food consumption in your party.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _athleticsIgnorePain.Initialize("{=AHtFRv5T}Ignore Pain", DefaultSkills.Athletics, GetTierCost(10), _athleticsSpartan, "{=1be7OEQB}{VALUE}% armor while on foot.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=F2H2lZJ4}{VALUE} armor to all equipped armor pieces of foot troops in your formation.", SkillEffect.PerkRole.Captain, 5f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.OnFoot);
            _athleticsMightyBlow.Initialize("{=lbGa4ihC}Mighty Blow ", DefaultSkills.Athletics, GetTierCost(11), null, "{=cqUXbafi}You stun your enemies longer after they block your attack.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=LItNgwiF}{VALUE} hit points for every skill point above 250.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _craftingIronMaker.Initialize("{=i3eT3Zjb}Efficient Iron Maker", DefaultSkills.Crafting, GetTierCost(1), _craftingCharcoalMaker, "{=6btajdpT}You can produce crude iron more efficiently by obtaining three units of crude iron from one unit of iron ore.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add);
            _craftingCharcoalMaker.Initialize("{=u5zNNZKa}Efficient Charcoal Maker", DefaultSkills.Crafting, GetTierCost(1), _craftingIronMaker, "{=wbwoVfSq}You can use a more efficient method of charcoal production that produces three units of charcoal from two units of hardwood.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add);
            _craftingSteelMaker.Initialize("{=pKquYFTX}Steel Maker", DefaultSkills.Crafting, GetTierCost(2), _craftingCuriousSmelter, "{=qZpIdBib}You can refine two units of iron into one unit of steel, and one unit of crude iron as by-product.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add);
            _craftingCuriousSmelter.Initialize("{=Tu1Sd2qg}Curious Smelter", DefaultSkills.Crafting, GetTierCost(2), _craftingSteelMaker, "{=1dS5OjLQ}{VALUE}% learning rate of new part designs when smelting.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingSteelMaker2.Initialize("{=EerNV0aM}Steel Maker 2", DefaultSkills.Crafting, GetTierCost(3), _craftingCuriousSmith, "{=mm5ZzOOV}You can refine two units of steel into one unit of fine steel, and one unit of crude iron as by-product.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add);
            _craftingCuriousSmith.Initialize("{=J1GSW0yk}Curious Smith", DefaultSkills.Crafting, GetTierCost(3), _craftingSteelMaker2, "{=vWt9bvOz}{VALUE}% learning rate of new part designs when smithing.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingExperiencedSmith.Initialize("{=dwtIc9AG}Experienced Smith", DefaultSkills.Crafting, GetTierCost(4), _craftingSteelMaker3, "{=w1K8XDls}{VALUE}% greater chance of creating Fine weapons.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=qPJJnxM1}Successful crafting orders of notables increase your relation by {VALUE} with them.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.Add);
            _craftingSteelMaker3.Initialize("{=c5GOJIhU}Steel Maker 3", DefaultSkills.Crafting, GetTierCost(4), _craftingExperiencedSmith, "{=fxGdAlI2}You can refine two units of fine steel into one unit of Thamaskene steel,{newline}and one unit of crude iron as by-product.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=3b4sjuMu}{VALUE} relationships with lords and ladies for successful crafting orders.", SkillEffect.PerkRole.Personal, 4f, SkillEffect.EffectIncrementType.Add);
            _craftingPracticalRefiner.Initialize("{=OrcSQyOb}Practical Refiner", DefaultSkills.Crafting, GetTierCost(5), _craftingPracticalSmelter, "{=hmrUcvwz}{VALUE}% stamina spent while refining.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingPracticalSmelter.Initialize("{=KFpnAWwr}Practical Smelter", DefaultSkills.Crafting, GetTierCost(5), _craftingPracticalRefiner, "{=NzlwbSIj}{VALUE}% stamina spent while smelting.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingVigorousSmith.Initialize("{=8hhS659w}Vigorous Smith", DefaultSkills.Crafting, GetTierCost(6), _craftingStrongSmith, "{=gtlygHIk}{VALUE} Vigor attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _craftingStrongSmith.Initialize("{=83iwPPVH}Controlled Smith", DefaultSkills.Crafting, GetTierCost(6), _craftingVigorousSmith, "{=C8LhGtUJ}{VALUE} Control attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _craftingPracticalSmith.Initialize("{=rR8iTDPI}Practical Smith", DefaultSkills.Crafting, GetTierCost(7), _craftingArtisanSmith, "{=FqmS9wcP}{VALUE}% stamina spent while smithing.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingArtisanSmith.Initialize("{=bnVCX24q}Artisan Smith", DefaultSkills.Crafting, GetTierCost(7), _craftingPracticalSmith, "{=W9pOfMAE}{VALUE}% trade penalty when selling smithing weapons.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingMasterSmith.Initialize("{=ivH8RWyb}Master Smith", DefaultSkills.Crafting, GetTierCost(8), null, "{=SBTTId7I}{VALUE}% greater chance of creating masterwork weapons.", SkillEffect.PerkRole.Personal, 0.075f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingFencerSmith.Initialize("{=SSdYsV4R}Fencer Smith", DefaultSkills.Crafting, GetTierCost(9), _craftingEnduringSmith, "{=j3QNVqP5}{VALUE} Focus Point to One Handed and Two Handed.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _craftingEnduringSmith.Initialize("{=RWMACSag}Enduring Smith", DefaultSkills.Crafting, GetTierCost(9), _craftingFencerSmith, "{=4uqDestM}{VALUE} Endurance attribute.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _craftingSharpenedEdge.Initialize("{=knWgaYdk}Sharpened Edge", DefaultSkills.Crafting, GetTierCost(10), _craftingSharpenedTip, "{=S7BMf2Wa}{VALUE}% swing damage of crafted weapons.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingSharpenedTip.Initialize("{=aO2JSbSq}Sharpened Tip", DefaultSkills.Crafting, GetTierCost(10), _craftingSharpenedEdge, "{=KabSHyf0}{VALUE}% thrust damage of crafted weapons.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _craftingLegendarySmith.Initialize("{=f4lnEplc}Legendary Smith", DefaultSkills.Crafting, GetTierCost(11), null, "{=wc15ZSpO}{VALUE}% greater chance of creating Legendary weapons, chance increases by 1% for every 5 skill points above 275.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingDayTraveler.Initialize("{=6PSgX2BP}Day Traveler", DefaultSkills.Scouting, GetTierCost(1), _scoutingNightRunner, "{=86nHAJs9}{VALUE}% travel speed during daytime.", SkillEffect.PerkRole.Scout, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=RUEfCZBG}{VALUE}% sight range during daytime in campaign map.", SkillEffect.PerkRole.Scout, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingNightRunner.Initialize("{=B8Gq2ylh}Night Runner", DefaultSkills.Scouting, GetTierCost(1), _scoutingDayTraveler, "{=QmaIRD7P}{VALUE}% travel speed during nighttime", SkillEffect.PerkRole.Scout, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=6CteaPKm}{VALUE}% sight range during nighttime in campaign map.", SkillEffect.PerkRole.Scout, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingPathfinder.Initialize("{=d2qGHXyx}Pathfinder", DefaultSkills.Scouting, GetTierCost(2), _scoutingWaterDiviner, "{=ETiOGIvT}{VALUE}% travel speed on steppes and plains.", SkillEffect.PerkRole.Scout, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=sAv1co78}{VALUE}% daily chance to increase relation with a notable by 1 when you enter a town.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingWaterDiviner.Initialize("{=gsz9DMNq}Water Diviner", DefaultSkills.Scouting, GetTierCost(2), _scoutingPathfinder, "{=8EtK0F1K}{VALUE}% sight range while traveling on steppes and plains.", SkillEffect.PerkRole.Scout, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=aW1qO2dN}{VALUE}% daily chance to increase relation with a notable by 1 when you enter a village.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingForestKin.Initialize("{=0XuFh3cX}Forest Kin", DefaultSkills.Scouting, GetTierCost(3), _scoutingDesertBorn, "{=cpbKNtlZ}{VALUE}% travel speed penalty from forests if your party is composed of 75% or more infantry units.", SkillEffect.PerkRole.Scout, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=xq9wJPKI}{VALUE}% tax income from villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingDesertBorn.Initialize("{=TbBmjK8M}Desert Born", DefaultSkills.Scouting, GetTierCost(3), _scoutingForestKin, "{=k9WaJ396}{VALUE}% travel speed on deserts and dunes.", SkillEffect.PerkRole.Scout, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=nUJfb5VX}{VALUE}% tax income from the governed settlement.", SkillEffect.PerkRole.Governor, 0.025f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingForcedMarch.Initialize("{=jhZe9Mfo}Forced March", DefaultSkills.Scouting, GetTierCost(4), _scoutingUnburdened, "{=zky6r5Ax}{VALUE}% travel speed when the party morale is higher than 75.", SkillEffect.PerkRole.Scout, 0.025f, SkillEffect.EffectIncrementType.AddFactor, "{=hLbn3SBE}{VALUE} experience per day to all troops while traveling with party morale higher than 75.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add);
            _scoutingUnburdened.Initialize("{=sA2OrT6l}Unburdened", DefaultSkills.Scouting, GetTierCost(4), _scoutingForcedMarch, "{=N5jFSdGR}{VALUE}% overburden penalty.", SkillEffect.PerkRole.Scout, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=OJ9QCJh8}{VALUE} experience per day to all troops when traveling while overburdened.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add);
            _scoutingTracker.Initialize("{=AoaabumE}Tracker", DefaultSkills.Scouting, GetTierCost(5), _scoutingRanger, "{=mTHliJuT}{VALUE}% track visibility duration.", SkillEffect.PerkRole.Scout, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=pnAq0a40}{VALUE}% travel speed while following a hostile party.", SkillEffect.PerkRole.Scout, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingRanger.Initialize("{=09gOOa0h}Ranger", DefaultSkills.Scouting, GetTierCost(5), _scoutingTracker, "{=boXP9vkF}{VALUE}% track spotting distance.", SkillEffect.PerkRole.Scout, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=aeK3ykbL}{VALUE}% track detection chance.", SkillEffect.PerkRole.Scout, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingMountedScouts.Initialize("{=K9Nb117q}Mounted Scouts", DefaultSkills.Scouting, GetTierCost(6), _scoutingPatrols, "{=DHZxUm6I}{VALUE}% sight range when your party is composed of more than %50 cavalry troops.", SkillEffect.PerkRole.Scout, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=rLs30aPf}{VALUE} party size limit.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _scoutingPatrols.Initialize("{=uKc4le8Q}Patrols", DefaultSkills.Scouting, GetTierCost(6), _scoutingMountedScouts, "{=2ljMER8Z}{VALUE} battle morale against bandit parties.", SkillEffect.PerkRole.Scout, 5f, SkillEffect.EffectIncrementType.Add, "{=7K0BqbFG}{VALUE}% advantage against bandits when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingForagers.Initialize("{=LPxEDIk7}Foragers", DefaultSkills.Scouting, GetTierCost(7), _scoutingBeastWhisperer, "{=FepLiMeY}{VALUE}% food consumption while traveling through steppes and forests.", SkillEffect.PerkRole.Scout, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=kjn1D5Td}{VALUE}% disorganized state duration.", SkillEffect.PerkRole.PartyLeader, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingBeastWhisperer.Initialize("{=mrtDAhtL}Beast Whisperer", DefaultSkills.Scouting, GetTierCost(7), _scoutingForagers, "{=jGAe89hM}{VALUE}% chance to find a mount when traveling through steppes and plains.", SkillEffect.PerkRole.Scout, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=Yp4zv2ib}{VALUE}% carrying capacity for pack animals in your party.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingVillageNetwork.Initialize("{=lYQAuYaH}Village Network", DefaultSkills.Scouting, GetTierCost(8), _scoutingRumourNetwork, "{=zj4Sz28B}{VALUE}% trade penalty with villages of your own culture.", SkillEffect.PerkRole.PartyLeader, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=j9KDLaDo}{VALUE}% villager party size of villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingRumourNetwork.Initialize("{=LwWyc6ou}Rumor Network", DefaultSkills.Scouting, GetTierCost(8), _scoutingVillageNetwork, "{=c7V0ayuX}{VALUE}% trade penalty within cities of your own kingdom.", SkillEffect.PerkRole.PartyLeader, -0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=JrTtFFfe}{VALUE}% hideout detection range.", SkillEffect.PerkRole.Scout, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingVantagePoint.Initialize("{=EC2n5DBl}Vantage Point", DefaultSkills.Scouting, GetTierCost(9), _scoutingKeenSight, "{=Y1lC59hw}{VALUE}% sight range when stationary for at least an hour.", SkillEffect.PerkRole.Scout, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=POp8DAZD}{VALUE} prisoner limit.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _scoutingKeenSight.Initialize("{=3yVPrhXt}Keen Sight", DefaultSkills.Scouting, GetTierCost(9), _scoutingVantagePoint, "{=dt1xXqbD}{VALUE}% sight penalty for traveling in forests.", SkillEffect.PerkRole.Scout, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=Lr7TZOFL}{VALUE}% chance of prisoner lords escaping from your party.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingVanguard.Initialize("{=Cp7dI87a}Vanguard", DefaultSkills.Scouting, GetTierCost(10), _scoutingRearguard, "{=9yN8Fpv6}{VALUE}% damage by your troops when they are sent as attackers.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=Bzoxobzn}{VALUE}% damage by your troops when they are sent to sally out.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingRearguard.Initialize("{=e4QAc5A6}Rearguard", DefaultSkills.Scouting, GetTierCost(10), _scoutingVanguard, "{=WlAAsJNK}{VALUE}% wounded troop recovery speed while in an army.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=dlnOcIyj}{VALUE}% damage by your troops when defending at your siege camp.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _scoutingUncannyInsight.Initialize("{=M9vC9mio}Uncanny Insight", DefaultSkills.Scouting, GetTierCost(11), null, "{=4Onw6Gxa}{VALUE}% party speed for every skill point above 200 scouting skill.", SkillEffect.PerkRole.Scout, 0.001f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsTightFormations.Initialize("{=EX5cZDLH}Tight Formations", DefaultSkills.Tactics, GetTierCost(1), _tacticsLooseFormations, "{=eJ8AN9Au}{VALUE}% damage by your infantry to cavalry when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=gJJ2F3iL}{VALUE}% morale penalty when troops in your formation use shield wall, square, skein, column formations.", SkillEffect.PerkRole.Captain, -0.25f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsLooseFormations.Initialize("{=9y3X0MQg}Loose Formations", DefaultSkills.Tactics, GetTierCost(1), _tacticsTightFormations, "{=Xykn90RV}{VALUE}% damage to your infantry from ranged troops when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=jZzVlDlf}{VALUE}% morale penalty when troops in your formation use line, loose, circle or scatter formations.", SkillEffect.PerkRole.Captain, -0.25f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsExtendedSkirmish.Initialize("{=EsYYcvcA}Extended Skirmish", DefaultSkills.Tactics, GetTierCost(2), _tacticsDecisiveBattle, "{=Jm0GA3ak}{VALUE}% damage in snowy and forest terrains when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=U3B7zaQb}{VALUE}% movement speed to troops in your formation in snowy and forest terrains.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsDecisiveBattle.Initialize("{=4ElA7gRS}Decisive Battle", DefaultSkills.Tactics, GetTierCost(2), _tacticsExtendedSkirmish, "{=CcggbEVk}{VALUE}% damage in plains, steppes and deserts when your troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=7yOCFsG5}{VALUE}% movement speed to troops in your formation in plains, steppes and deserts.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsSmallUnitTactics.Initialize("{=30hNRt3x}Small Unit Tactics", DefaultSkills.Tactics, GetTierCost(3), _tacticsHordeLeader, "{=3mJMAX0Y}{VALUE} troop for the hideout crew", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=GDSQyMaG}{VALUE}% movement speed to troops in your formation when there are less than 15 soldiers.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsHordeLeader.Initialize("{=Vp8Pwou8}Horde Leader", DefaultSkills.Tactics, GetTierCost(3), _tacticsSmallUnitTactics, "{=NouDSrXE}{VALUE} party size.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=y52Zz7U9}{VALUE}% army cohesion loss to commanded armies.", SkillEffect.PerkRole.ArmyCommander, -0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsLawKeeper.Initialize("{=zUK9JOlb}Law Keeper", DefaultSkills.Tactics, GetTierCost(4), _tacticsCoaching, "{=QOMr1QS7}{VALUE}% damage against bandits when your troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=yfRAX2Qv}{VALUE}% damage against bandits by troops in your formation.", SkillEffect.PerkRole.Captain, 0.04f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsCoaching.Initialize("{=afaCdojS}Coaching", DefaultSkills.Tactics, GetTierCost(4), _tacticsLawKeeper, "{=KSWdxKPJ}{VALUE}% damage when your troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.03f, SkillEffect.EffectIncrementType.AddFactor, "{=9CjoaJwe}{VALUE}% damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.01f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsSwiftRegroup.Initialize("{=nmJe4wN1}Swift Regroup", DefaultSkills.Tactics, GetTierCost(5), _tacticsImproviser, "{=9f16mDn0}{VALUE}% disorganized state duration when a raid or siege is broken.", SkillEffect.PerkRole.PartyMember, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=0pW4fcjt}{VALUE}% troops left behind when escaping from battles.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsImproviser.Initialize("{=qAn93jVN}Improviser", DefaultSkills.Tactics, GetTierCost(5), _tacticsSwiftRegroup, "{=pFSWDNaF}No morale penalty for disorganized state in battles, in sally out or when being attacked.", SkillEffect.PerkRole.PartyMember, 0f, SkillEffect.EffectIncrementType.Add, "{=4V8CS018}{VALUE}% loss of troops when breaking into or out of a settlement under siege.", SkillEffect.PerkRole.PartyLeader, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsOnTheMarch.Initialize("{=kolBffjD}On The March", DefaultSkills.Tactics, GetTierCost(6), _tacticsCallToArms, "{=C6rYWvrb}{VALUE}% fortification bonus to enemies when troops are sent to confront the enemy.", SkillEffect.PerkRole.ArmyCommander, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=09npcQY0}{VALUE}% fortification bonus to the governed settlement", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsCallToArms.Initialize("{=mUubYb7v}Call To Arms", DefaultSkills.Tactics, GetTierCost(6), _tacticsOnTheMarch, "{=3UB3qhjk}{VALUE}% movement speed to parties called to your army.", SkillEffect.PerkRole.ArmyCommander, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=mAKqS7Rk}{VALUE}% influence required to call parties to your army", SkillEffect.PerkRole.ArmyCommander, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsPickThemOfTheWalls.Initialize("{=XQkY7jkL}Pick Them Off The Walls", DefaultSkills.Tactics, GetTierCost(7), _tacticsMakeThemPay, "{=mmRmG5AY}{VALUE}% chance for dealing double damage to siege defender troops in siege bombardment", SkillEffect.PerkRole.Engineer, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=bBRA2jJp}{VALUE}% chance for dealing double damage to besieging troops in siege bombardment of the governed settlement.", SkillEffect.PerkRole.Governor, 0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsMakeThemPay.Initialize("{=8xxeNK0o}Make Them Pay", DefaultSkills.Tactics, GetTierCost(7), _tacticsPickThemOfTheWalls, "{=e2N77Ufi}{VALUE}% damage to defender siege engines.", SkillEffect.PerkRole.Engineer, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=hDvZTHbq}{VALUE}% damage to besieging siege engines.", SkillEffect.PerkRole.Governor, 0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsEliteReserves.Initialize("{=luDtfSN7}Elite Reserves", DefaultSkills.Tactics, GetTierCost(8), _tacticsEncirclement, "{=zVEvl8WQ}{VALUE}% less damage to tier 3+ units when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=ldD4sVOi}{VALUE}% damage taken by troops in your formation.", SkillEffect.PerkRole.Captain, -0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _tacticsEncirclement.Initialize("{=EhaMPtRX}Encirclement", DefaultSkills.Tactics, GetTierCost(8), _tacticsEliteReserves, "{=seiduCHq}{VALUE}% damage to outnumbered enemies when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=mtB1tUIb}{VALUE}% influence cost to boost army cohesion.", SkillEffect.PerkRole.ArmyCommander, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsPreBattleManeuvers.Initialize("{=cHgLxbbc}Pre Battle Maneuvers", DefaultSkills.Tactics, GetTierCost(9), _tacticsBesieged, "{=dPo5goLo}{VALUE}% influence gain from winning battles.", SkillEffect.PerkRole.PartyMember, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=70PZ5mFx}{VALUE}% damage per 100 skill difference with the enemy when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.01f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsBesieged.Initialize("{=ALC3Kzv9}Besieged", DefaultSkills.Tactics, GetTierCost(9), _tacticsPreBattleManeuvers, "{=gjkWXuwC}{VALUE}% damage while besieged when troops are sent to confront the enemy.", SkillEffect.PerkRole.PartyMember, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=SIMwGiJF}{VALUE}% influence gain from winning sieges.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsCounteroffensive.Initialize("{=mn5tQhyp}Counter Offensive", DefaultSkills.Tactics, GetTierCost(10), _tacticsGensdarmes, "{=FQppujVl}{VALUE}% damage when troops are sent to confront the attacking enemy in a field battle.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=4Xb1xtbF}{VALUE}% damage when troops are sent to confront the enemy while outnumbered.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _tacticsGensdarmes.Initialize("{=CTEuBfU0}Gens d'armes", DefaultSkills.Tactics, GetTierCost(10), _tacticsCounteroffensive, "{=cPvszBhr}{VALUE}% damage to infantry by cavalry troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=buFin46y}{VALUE} daily security in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Mounted);
            _tacticsTacticalMastery.Initialize("{=8rvpcb4k}Tactical Mastery", DefaultSkills.Tactics, GetTierCost(11), null, "{=ClrLzkvx}{VALUE}% damage for every skill point above 200 tactics skill when troops are sent to confront the enemy.", SkillEffect.PerkRole.ArmyCommander, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryNoRestForTheWicked.Initialize("{=RyfFWmDs}No Rest for the Wicked", DefaultSkills.Roguery, GetTierCost(1), _roguerySweetTalker, "{=yZarNiMq}{VALUE}% experience gain for bandits in your party.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=IqRNTls2}{VALUE}% raid speed.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _roguerySweetTalker.Initialize("{=570wiYEe}Sweet Talker", DefaultSkills.Roguery, GetTierCost(1), _rogueryNoRestForTheWicked, "{=P3d4nn88}{VALUE}% chance for convincing bandits to leave in peace with barter.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=icyzOJZf}{VALUE}% prisoner escape chance in the governed settlement.", SkillEffect.PerkRole.Governor, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryTwoFaced.Initialize("{=kg4Mx9j4}Two Faced", DefaultSkills.Roguery, GetTierCost(2), _rogueryDeepPockets, "{=uDRb7FmU}{VALUE}% increased chance for sneaking into towns", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=PznnUlI3}No morale loss from converting bandit prisoners.", SkillEffect.PerkRole.PartyLeader, 0f, SkillEffect.EffectIncrementType.Add);
            _rogueryDeepPockets.Initialize("{=by1b61pn}Deep Pockets", DefaultSkills.Roguery, GetTierCost(2), _rogueryTwoFaced, "{=ixiL39S4}Double the amount of betting allowed in tournaments.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.AddFactor, "{=xSKhyecU}{VALUE}% bandit troop wages.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryInBestLight.Initialize("{=xoARIHde}In Best Light", DefaultSkills.Roguery, GetTierCost(3), _rogueryKnowHow, "{=fcraUMzb}{VALUE} extra troop from village notables when successfully forced for volunteers.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=UYYntLzb}{VALUE}% faster recovery from raids for your villages.", SkillEffect.PerkRole.ClanLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryKnowHow.Initialize("{=tvoN5ynt}Know-How", DefaultSkills.Roguery, GetTierCost(3), _rogueryInBestLight, "{=swgcsLOA}{VALUE}% more loot from defeated villagers and caravans.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=XwmYu5rH}{VALUE} security per day in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _rogueryPromises.Initialize("{=XZOtTuxA}Promises", DefaultSkills.Roguery, GetTierCost(4), _rogueryManhunter, "{=jKUmtH7z}{VALUE}% food consumption for bandit units in your party.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=zHQuHeIg}{VALUE}% recruitment rate for bandit prisoners in your party.", SkillEffect.PerkRole.PartyLeader, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryManhunter.Initialize("{=GeB42ygg}Manhunter", DefaultSkills.Roguery, GetTierCost(4), _rogueryPromises, "{=pcys1RSF}{VALUE}% better deals with ransom broker for regular troops.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=POp8DAZD}{VALUE} prisoner limit.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _rogueryScarface.Initialize("{=XqSn5Uo0}Scarface", DefaultSkills.Roguery, GetTierCost(5), _rogueryWhiteLies, "{=FaGc9xR4}{VALUE}% chance for bandits, villagers and caravans to surrender.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=1IYP1wHc}{VALUE}% chance per day to increase relation with a notable by 1 in the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryWhiteLies.Initialize("{=F51HfzZj}White Lies", DefaultSkills.Roguery, GetTierCost(5), _rogueryScarface, "{=mseUsbjg}{VALUE}% crime rating decrease rate.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=R8vLC6j0}{VALUE}% chance to get 1 relation per day with a random notable in the governed settlement.", SkillEffect.PerkRole.Governor, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _roguerySmugglerConnections.Initialize("{=E8a2joMO}Smuggler Connections", DefaultSkills.Roguery, GetTierCost(6), _rogueryPartnersInCrime, "{=XZe7YPLJ}{VALUE} armor points to equipped civilian body armors.", SkillEffect.PerkRole.Personal, 10f, SkillEffect.EffectIncrementType.Add, "{=gXmzmJbg}{VALUE}% trade penalty when you have crime rating.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryPartnersInCrime.Initialize("{=2PVm7NON}Partners in Crime", DefaultSkills.Roguery, GetTierCost(6), _roguerySmugglerConnections, "{=zFfkR2uK}Surrendering bandit parties always offer to join you.", SkillEffect.PerkRole.PartyLeader, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=mNleBavO}{VALUE}% damage by bandit troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _rogueryOneOfTheFamily.Initialize("{=oumTabhS}One of the Family", DefaultSkills.Roguery, GetTierCost(7), _roguerySaltTheEarth, "{=w0LOgr9e}{VALUE} bonus Vigor and Control skills to bandit units in your party", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=Dn0yNCn8}{VALUE} recruitment slot when recruiting from gang leaders.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _roguerySaltTheEarth.Initialize("{=tuv1O7ig}Salt the Earth", DefaultSkills.Roguery, GetTierCost(7), _rogueryOneOfTheFamily, "{=MesU0nGW}{VALUE}% more loot when villagers comply to your hostile actions.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=YbioVwyr}{VALUE}% tariff revenue in the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryCarver.Initialize("{=7gZo2SY4}Carver", DefaultSkills.Roguery, GetTierCost(8), _rogueryRansomBroker, "{=g2Zy1Bso}{VALUE}% damage with civilian weapons.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=hiH9dVhH}{VALUE}% one handed damage by troops under your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.OneHandedUser);
            _rogueryRansomBroker.Initialize("{=W2WXkiAh}Ransom Broker", DefaultSkills.Roguery, GetTierCost(8), _rogueryCarver, "{=7gabTf4P}{VALUE}% better deals for heroes from ransom brokers.", SkillEffect.PerkRole.PartyLeader, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=8aajPkKG}{VALUE}% escape chance for hero prisoners.", SkillEffect.PerkRole.PartyLeader, -0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryArmsDealer.Initialize("{=5bmlZ26b}Arms Dealer", DefaultSkills.Roguery, GetTierCost(9), _rogueryDirtyFighting, "{=o5rp0ViP}{VALUE}% sell price penalty for weapons.", SkillEffect.PerkRole.PartyLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=nmTai1Vw}{VALUE}% militia per day in the besieged governed settlement.", SkillEffect.PerkRole.Governor, 2f, SkillEffect.EffectIncrementType.Add);
            _rogueryDirtyFighting.Initialize("{=bb1hS9I4}Dirty Fighting", DefaultSkills.Roguery, GetTierCost(9), _rogueryArmsDealer, "{=bm3eSbBD}{VALUE}% stun duration for kicking.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=iuCYTaMJ}{VALUE} random food item will be smuggled to the besieged governed settlement.", SkillEffect.PerkRole.Governor, 2f, SkillEffect.EffectIncrementType.Add);
            _rogueryDashAndSlash.Initialize("{=w1B71sNj}Dash and Slash", DefaultSkills.Roguery, GetTierCost(10), _rogueryFleetFooted, "{=QiZfTNWJ}{VALUE}% damage bonus from speed while on foot.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=hRCvgbQ5}{VALUE}% two handed weapon damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.02f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.TwoHandedUser);
            _rogueryFleetFooted.Initialize("{=yY5iDvAb}Fleet Footed", DefaultSkills.Roguery, GetTierCost(10), _rogueryDashAndSlash, "{=93Z7G161}{VALUE}% combat movement speed while no weapons or shields are equipped.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=lSebD5Fa}{VALUE}% escape chance when imprisoned by mobile parties.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _rogueryRogueExtraordinaire.Initialize("{=U3cgqyUE}Rogue Extraordinaire", DefaultSkills.Roguery, GetTierCost(11), null, "{=ClrwacPi}{VALUE}% loot amount for every skill point above 200.", SkillEffect.PerkRole.Personal, 0.01f, SkillEffect.EffectIncrementType.AddFactor);
            _charmVirile.Initialize("{=mbqoZ4WH}Virile", DefaultSkills.Charm, GetTierCost(1), _charmSelfPromoter, "{=pdQbJrr4}{VALUE}% more likely to have children.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=29R5VkXa}{VALUE}% daily chance to get +1 relation with a random notable in the governed settlement while a continuous project is active.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _charmSelfPromoter.Initialize("{=hkG9ATZy}Self Promoter", DefaultSkills.Charm, GetTierCost(1), _charmVirile, "{=qARDRFqO}{VALUE} renown when a tournament is won.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.Add, "{=PSvarWWW}{VALUE} morale while defending in a besieged settlement.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _charmOratory.Initialize("{=OZXEMb2C}Oratory", DefaultSkills.Charm, GetTierCost(2), _charmWarlord, "{=qRoQuHe4}{VALUE} renown and influence for each issue resolved", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=YBmzuIbm}{VALUE} relationship with a random notable of your kingdom when an enemy lord is defeated.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _charmWarlord.Initialize("{=jiWr5Rlz}Warlord", DefaultSkills.Charm, GetTierCost(2), _charmOratory, "{=IbQlvyY5}{VALUE}% influence gain from battles.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=231BaeH9}{VALUE} relationship with a random lord of your kingdom when an enemy lord is defeated.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _charmForgivableGrievances.Initialize("{=l863hIyN}Forgivable Grievances", DefaultSkills.Charm, GetTierCost(3), _charmMeaningfulFavors, "{=BCB08mNZ}{VALUE}% chance of avoiding critical failure on persuasion.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=bFMDTiLE}{VALUE}% daily chance to increase relations with a random lord or notable with negative relations with you when you are in a settlement.", SkillEffect.PerkRole.Personal, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _charmMeaningfulFavors.Initialize("{=4hUEryJ6}Meaningful Favors", DefaultSkills.Charm, GetTierCost(3), _charmForgivableGrievances, "{=T1N2w4uK}{VALUE}% chance for double persuasion success.", SkillEffect.PerkRole.Personal, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=6WP4OkKt}{VALUE}% daily chance to increase relations with powerful notables in the governed settlement.", SkillEffect.PerkRole.Governor, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _charmInBloom.Initialize("{=ZlXSlx0p}In Bloom", DefaultSkills.Charm, GetTierCost(4), _charmYoungAndRespectful, "{=aVWb6aoQ}{VALUE}% relationship gain with the opposing gender.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=SimMOKbW}{VALUE}% daily chance to increase relations with a random notable of opposed sex in the governed settlement.", SkillEffect.PerkRole.Governor, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _charmYoungAndRespectful.Initialize("{=TpzZgFsA}Young And Respectful", DefaultSkills.Charm, GetTierCost(4), _charmInBloom, "{=3MOJjS7A}{VALUE}% relationship gain with the same gender.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=7e397ieb}{VALUE}% daily chance to increase relations with a random notable of same sex in the governed settlement.", SkillEffect.PerkRole.Governor, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _charmFirebrand.Initialize("{=EbKP7Xx5}Firebrand", DefaultSkills.Charm, GetTierCost(5), _charmFlexibleEthics, "{=vYj0z0zr}{VALUE}% influence cost to initiate kingdom decisions.", SkillEffect.PerkRole.ClanLeader, -0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=4ajo4jvp}{VALUE} recruitment slot from rural notables.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _charmFlexibleEthics.Initialize("{=58Imsasy}Flexible Ethics", DefaultSkills.Charm, GetTierCost(5), _charmFirebrand, "{=HkOatwqw}{VALUE}% influence cost when voting for kingdom proposals made by others.", SkillEffect.PerkRole.Personal, -0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=FbAGhzbI}{VALUE} recruitment slot from urban notables.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _charmEffortForThePeople.Initialize("{=RIiVDdi0}Effort For The People", DefaultSkills.Charm, GetTierCost(6), _charmSlickNegotiator, "{=P2eOw2sQ}{VALUE} relation with the nearest settlement owner clan when you clear a hideout. +1 town loyalty if it is your clan.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.Add, "{=FpleMw35}{VALUE}% barter penalty with lords of same culture.", SkillEffect.PerkRole.Personal, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _charmSlickNegotiator.Initialize("{=WOqxWM67}Slick Negotiator", DefaultSkills.Charm, GetTierCost(6), _charmEffortForThePeople, "{=AqpEXxNy}{VALUE}% hiring costs of mercenary troops.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=6ex96ekx}{VALUE}% barter penalty with lords of different cultures.", SkillEffect.PerkRole.Personal, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _charmGoodNatured.Initialize("{=2y7gahYi}Good Natured", DefaultSkills.Charm, GetTierCost(7), _charmTribute, "{=aitgGIog}{VALUE}% influence return when a supported proposal fails to pass.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.AddFactor, "{=fpaeONmG}{VALUE} extra relationship when you increase relationship with merciful lords.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _charmTribute.Initialize("{=dSBbSHkM}Tribute", DefaultSkills.Charm, GetTierCost(7), _charmGoodNatured, "{=nJu03DL9}{VALUE}% relationship bonus when you pay more than minimum amount in barters.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=iqJQd4D8}{VALUE} extra relationship when you increase relationship with cruel lords.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _charmMoralLeader.Initialize("{=zUXUrGWa}Moral Leader", DefaultSkills.Charm, GetTierCost(8), _charmNaturalLeader, "{=9mlBbzLx}{VALUE} persuasion success required against characters of your own culture.", SkillEffect.PerkRole.Personal, -1f, SkillEffect.EffectIncrementType.Add, "{=Cm0OcbsV}{VALUE} relation with settlement notables when a project is completed in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _charmNaturalLeader.Initialize("{=qaZDUknZ}Natural Leader", DefaultSkills.Charm, GetTierCost(8), _charmMoralLeader, "{=dyVvsBMs}{VALUE} persuasion success required against characters of different cultures.", SkillEffect.PerkRole.Personal, -1f, SkillEffect.EffectIncrementType.Add, "{=30eSZeZd}{VALUE}% experience gain for companions.", SkillEffect.PerkRole.ClanLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _charmPublicSpeaker.Initialize("{=16fxd9fN}Public Speaker", DefaultSkills.Charm, GetTierCost(9), _charmParade, "{=z4naITkR}{VALUE}% renown gain from battles.", SkillEffect.PerkRole.PartyLeader, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=J7JaXZm8}{VALUE}% effect from forums, marketplaces and festivals.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _charmParade.Initialize("{=DTnaWgAv}Parade", DefaultSkills.Charm, GetTierCost(9), _charmPublicSpeaker, "{=yA2P7w9N}{VALUE} loyalty bonus to settlement while waiting in the settlement.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=rHtwp8ag}{VALUE}% daily chance to gain +1 relationship with a random lord in the same army.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _charmCamaraderie.Initialize("{=p2zZGkZw}Camaraderie", DefaultSkills.Charm, GetTierCost(10), null, "{=l2ZKUJQY}Double the relation gain for helping lords in battle.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.AddFactor, "{=XmwIHIMN}{VALUE} companion limit", SkillEffect.PerkRole.ClanLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _charmImmortalCharm.Initialize("{=9XWiXokY}Immortal Charm", DefaultSkills.Charm, GetTierCost(11), null, "{=BjLYCHMD}{VALUE} influence per day.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add);
            _leadershipCombatTips.Initialize("{=Cb5s9HlD}Combat Tips", DefaultSkills.Leadership, GetTierCost(1), _leadershipRaiseTheMeek, "{=76TOkicW}{VALUE} experience per day to all troops in party.", SkillEffect.PerkRole.PartyLeader, 2f, SkillEffect.EffectIncrementType.Add, "{=z3OU7vrn}{VALUE} to troop tiers when recruiting from same culture.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _leadershipRaiseTheMeek.Initialize("{=JGCtv8om}Raise The Meek", DefaultSkills.Leadership, GetTierCost(1), _leadershipCombatTips, "{=Ra2poaEh}{VALUE} experience per day to tier 1 and 2 troops.", SkillEffect.PerkRole.PartyLeader, 4f, SkillEffect.EffectIncrementType.Add, "{=CjLuIEgh}{VALUE} experience per day to each troop in garrison in the governed settlement.", SkillEffect.PerkRole.Governor, 3f, SkillEffect.EffectIncrementType.Add);
            _leadershipFerventAttacker.Initialize("{=MhRF64eR}Fervent Attacker", DefaultSkills.Leadership, GetTierCost(2), _leadershipStoutDefender, "{=o7xn0ybm}{VALUE} starting battle morale when attacking.", SkillEffect.PerkRole.PartyLeader, 4f, SkillEffect.EffectIncrementType.Add, "{=AbulTQm9}{VALUE}% recruitment rate of tier 1, 2 and 3 prisoners.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipStoutDefender.Initialize("{=YogcurDJ}Stout Defender", DefaultSkills.Leadership, GetTierCost(2), _leadershipFerventAttacker, "{=RIMXqF1d}{VALUE} battle morale at the beginning of a battle when defending.", SkillEffect.PerkRole.PartyLeader, 8f, SkillEffect.EffectIncrementType.Add, "{=qItLTWR2}{VALUE}% recruitment rate of tier 4+ prisoners.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipAuthority.Initialize("{=CeCAMvkX}Authority", DefaultSkills.Leadership, GetTierCost(3), _leadershipHeroicLeader, "{=bezXAM92}{VALUE}% security bonus from the town garrison in the governing settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=rLs30aPf}{VALUE} party size limit.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _leadershipHeroicLeader.Initialize("{=7aX2eh5x}Heroic Leader", DefaultSkills.Leadership, GetTierCost(3), _leadershipAuthority, "{=m993aVvX}{VALUE} daily loyalty in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, "{=yvyVugUN}{VALUE}% battle morale penalty to enemies when troops in your formation kill an enemy.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _leadershipLoyaltyAndHonor.Initialize("{=UJYaonYM}Loyalty and Honor", DefaultSkills.Leadership, GetTierCost(4), _leadershipFamousCommander, "{=wBURlfzR}Tier 3+ troops in your party no longer retreat due to low morale", SkillEffect.PerkRole.PartyLeader, 3f, SkillEffect.EffectIncrementType.Add, "{=kuu7M6aQ}{VALUE}% faster non-bandit prisoner recruitment.", SkillEffect.PerkRole.PartyLeader, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipFamousCommander.Initialize("{=FQkHkMhw}Famous Commander", DefaultSkills.Leadership, GetTierCost(4), _leadershipLoyaltyAndHonor, "{=z4naITkR}{VALUE}% renown gain from battles.", SkillEffect.PerkRole.Personal, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=CkJarFvq}{VALUE} experience to troops on recruitment.", SkillEffect.PerkRole.Personal, 200f, SkillEffect.EffectIncrementType.Add);
            _leadershipPresence.Initialize("{=6RckjM4S}Presence", DefaultSkills.Leadership, GetTierCost(5), _leadershipLeaderOfTheMasses, "{=UgRGBWhn}{VALUE} security per day while waiting in a town.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=9JN5bc7f}No morale penalty for recruiting prisoners of your faction.", SkillEffect.PerkRole.PartyLeader, 0f, SkillEffect.EffectIncrementType.Add);
            _leadershipLeaderOfTheMasses.Initialize("{=T5rM9XgO}Leader of the Masses", DefaultSkills.Leadership, GetTierCost(5), _leadershipPresence, "{=VUma8oHz}{VALUE} party size for each town you control.", SkillEffect.PerkRole.ClanLeader, 5f, SkillEffect.EffectIncrementType.Add, "{=ptmYmT6B}{VALUE}% experience from battles shared with the troops in your party.", SkillEffect.PerkRole.PartyLeader, 0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipVeteransRespect.Initialize("{=vWGQNcu5}Veteran's Respect", DefaultSkills.Leadership, GetTierCost(6), _leadershipCitizenMilitia, "{=wSLO8VgG}{VALUE} garrison size in the governed settlement.", SkillEffect.PerkRole.Governor, 20f, SkillEffect.EffectIncrementType.Add, "{=lsnrQCB8}Bandits can be converted into regular troops.", SkillEffect.PerkRole.PartyLeader, 0f, SkillEffect.EffectIncrementType.Add);
            _leadershipCitizenMilitia.Initialize("{=vZtLm43v}Citizen Militia", DefaultSkills.Leadership, GetTierCost(6), _leadershipVeteransRespect, "{=kVd6nlXo}{VALUE}% chance of militias to spawn as elite troops in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=QPfj9Dbj}{VALUE}% morale from victories.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipInspiringLeader.Initialize("{=kaEzJUTW}Inspiring Leader", DefaultSkills.Leadership, GetTierCost(7), _leadershipUpliftingSpirit, "{=M04V0cmt}{VALUE}% influence cost for calling parties to an army.", SkillEffect.PerkRole.ArmyCommander, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=je77ZaN7}{VALUE}% experience to troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _leadershipUpliftingSpirit.Initialize("{=EbROfVJJ}Uplifting Spirit", DefaultSkills.Leadership, GetTierCost(7), _leadershipInspiringLeader, "{=FZ06ALO6}{VALUE} battle morale in siege battles.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=rLs30aPf}{VALUE} party size limit.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add);
            _leadershipTrustedCommander.Initialize("{=6ETg3maz}Trusted Commander", DefaultSkills.Leadership, GetTierCost(8), _leadershipLeadByExample, "{=dAS81esi}{VALUE}% recruitment rate for ranged prisoners.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=lutYwHwt}{VALUE}% experience for troops, when they are sent to confront the enemy.", SkillEffect.PerkRole.PartyLeader, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipLeadByExample.Initialize("{=WFFlp3Qi}Lead by Example", DefaultSkills.Leadership, GetTierCost(8), _leadershipTrustedCommander, "{=tEsgNQOZ}{VALUE}% recruitment rate for infantry prisoners.", SkillEffect.PerkRole.PartyLeader, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=aeceOwWb}{VALUE}% shared experience for cavalry troops.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipMakeADifference.Initialize("{=5uW9zKTN}Make a Difference", DefaultSkills.Leadership, GetTierCost(9), _leadershipGreatLeader, "{=YaPOTaMJ}{VALUE}% battle morale to troops when you kill an enemy in battle.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.AddFactor, "{=MMMuSlOW}{VALUE}% shared experience for archers.", SkillEffect.PerkRole.PartyLeader, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _leadershipGreatLeader.Initialize("{=3hzSmrMw}Great Leader", DefaultSkills.Leadership, GetTierCost(9), _leadershipMakeADifference, "{=p8pviWlQ}{VALUE} battle morale to troops at the beginning of a battle.", SkillEffect.PerkRole.ArmyCommander, 5f, SkillEffect.EffectIncrementType.Add, "{=LGH67bOj}{VALUE} battle morale to troops that are of same culture as you.", SkillEffect.PerkRole.PartyLeader, 5f, SkillEffect.EffectIncrementType.Add);
            _leadershipWePledgeOurSwords.Initialize("{=3GHIb7YX}We Pledge our Swords", DefaultSkills.Leadership, GetTierCost(10), _leadershipTalentMagnet, "{=0AUYrhGw}{VALUE} companion limit.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add, "{=FkkVHjBP}{VALUE} battle morale at the beginning of the battle for each tier 6 troop in the party up to 10 morale.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _leadershipTalentMagnet.Initialize("{=pFfqWRnf}Talent Magnet", DefaultSkills.Leadership, GetTierCost(10), _leadershipWePledgeOurSwords, "{=rLs30aPf}{VALUE} party size limit.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=gqboke7l}{VALUE} clan party limit.", SkillEffect.PerkRole.ClanLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _leadershipUltimateLeader.Initialize("{=FK3W0SKk}Ultimate Leader", DefaultSkills.Leadership, GetTierCost(11), null, "{=Q72PJYtf}{VALUE} party size for each leadership point above 250.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add);
            _tradeAppraiser.Initialize("{=b3PsxeiB}Appraiser", DefaultSkills.Trade, GetTierCost(1), _tradeWholeSeller, "{=wki8aFec}{VALUE}% price penalty while selling equipment.", SkillEffect.PerkRole.PartyLeader, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=gHUQfWlg}Your profits are marked.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeWholeSeller.Initialize("{=lTNpxGoh}Whole Seller", DefaultSkills.Trade, GetTierCost(1), _tradeAppraiser, "{=9Y4rMcYj}{VALUE}% price penalty while selling trade goods.", SkillEffect.PerkRole.PartyLeader, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=gHUQfWlg}Your profits are marked.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeCaravanMaster.Initialize("{=5acLha5Q}Caravan Master", DefaultSkills.Trade, GetTierCost(2), _tradeMarketDealer, "{=SPs04fam}{VALUE}% carrying capacity for your party.", SkillEffect.PerkRole.Quartermaster, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=QUYwIYEi}Item prices are marked relative to the average price.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeMarketDealer.Initialize("{=InLGoUbB}Market Dealer", DefaultSkills.Trade, GetTierCost(2), _tradeCaravanMaster, "{=Si3QiLW4}{VALUE}% cost of bartering for safe passage.", SkillEffect.PerkRole.ClanLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=QUYwIYEi}Item prices are marked relative to the average price.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeDistributedGoods.Initialize("{=nxkNY4YG}Distributed Goods", DefaultSkills.Trade, GetTierCost(3), _tradeLocalConnection, "{=we6jYdRD}Double the relationship gain by resolved issues with artisans.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.AddFactor, "{=RYkPTHv1}{VALUE}% price penalty while buying from villages.", SkillEffect.PerkRole.Quartermaster, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeLocalConnection.Initialize("{=mznjEwjC}Local Connection", DefaultSkills.Trade, GetTierCost(3), _tradeDistributedGoods, "{=ORencCvQ}Double the relationship gain by resolved issues with merchants.", SkillEffect.PerkRole.Personal, 2f, SkillEffect.EffectIncrementType.Add, "{=AAYplFKi}{VALUE}% price penalty while selling animals.", SkillEffect.PerkRole.Quartermaster, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeTravelingRumors.Initialize("{=3j6Ec63l}Traveling Rumors", DefaultSkills.Trade, GetTierCost(4), _tradeTollgates, "{=DV2kW53e}Your caravans gather trade rumors.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=D2nbscmg}{VALUE} gold for each villager party visiting the governed settlement.", SkillEffect.PerkRole.Governor, 20f, SkillEffect.EffectIncrementType.Add);
            _tradeTollgates.Initialize("{=JnSh4Fmz}Toll Gates", DefaultSkills.Trade, GetTierCost(4), _tradeTravelingRumors, "{=SOHgkGKy}Your workshops gather trade rumors.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=bteVVFh0}{VALUE} gold for each caravan visiting the governed settlement.", SkillEffect.PerkRole.Governor, 30f, SkillEffect.EffectIncrementType.Add);
            _tradeArtisanCommunity.Initialize("{=8f8UGq46}Artisan Community", DefaultSkills.Trade, GetTierCost(5), _tradeGreatInvestor, "{=CBSDuOmp}{VALUE} daily renown from every profiting workshop.", SkillEffect.PerkRole.ClanLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=amA9OfPU}{VALUE} recruitment slot when recruiting from merchant notables. ", SkillEffect.PerkRole.Quartermaster, 1f, SkillEffect.EffectIncrementType.Add);
            _tradeGreatInvestor.Initialize("{=g9qLrEb4}Great Investor", DefaultSkills.Trade, GetTierCost(5), _tradeArtisanCommunity, "{=aYpbyTfA}{VALUE} daily renown from every profiting caravan.", SkillEffect.PerkRole.ClanLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=m41r7FPw}{VALUE}% companion recruitment cost.", SkillEffect.PerkRole.Quartermaster, -0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeMercenaryConnections.Initialize("{=vivNLdHp}Mercenary Connections", DefaultSkills.Trade, GetTierCost(6), _tradeContentTrades, "{=HrTFr1ox}{VALUE}% workshop production rate.", SkillEffect.PerkRole.Governor, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=GNtTFR0j}{VALUE}% mercenary troop wages in your party.", SkillEffect.PerkRole.PartyLeader, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeContentTrades.Initialize("{=FV4SWLQx}Content Trades", DefaultSkills.Trade, GetTierCost(6), _tradeMercenaryConnections, "{=Eo958e7R}{VALUE}% tariff income in the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=Oq1K7oDW}{VALUE}% wages paid while waiting in settlements.", SkillEffect.PerkRole.PartyLeader, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeInsurancePlans.Initialize("{=aYQybo4E}Insurance Plans", DefaultSkills.Trade, GetTierCost(7), _tradeRapidDevelopment, "{=NMnpGic4}{VALUE} denar return when one of your caravans is destroyed.", SkillEffect.PerkRole.ClanLeader, 5000f, SkillEffect.EffectIncrementType.Add, "{=xe0dX5QQ}{VALUE}% price penalty while buying food items.", SkillEffect.PerkRole.Quartermaster, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeRapidDevelopment.Initialize("{=u9oONz9o}Rapid Development", DefaultSkills.Trade, GetTierCost(7), _tradeInsurancePlans, "{=EdCkK2c4}{VALUE} denar return for each workshop when workshop's town is captured by an enemy.", SkillEffect.PerkRole.ClanLeader, 5000f, SkillEffect.EffectIncrementType.Add, "{=4ORpHfu2}{VALUE}% price penalty while buying clay, iron, cotton and silver.", SkillEffect.PerkRole.Quartermaster, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeGranaryAccountant.Initialize("{=TFy2VYtM}Granary Accountant", DefaultSkills.Trade, GetTierCost(8), _tradeTradeyardForeman, "{=SyxQF0tM}{VALUE}% price penalty while selling food items.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=JnQcDyAz}{VALUE}% production rate to grain, olives, fish, date in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeTradeyardForeman.Initialize("{=QqKNxmeF}Tradeyard Foreman", DefaultSkills.Trade, GetTierCost(8), _tradeGranaryAccountant, "{=KgrnmR73}{VALUE}% price penalty while selling pottery, tools, cotton and jewelry.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=mN3fLgtx}{VALUE}% production rate to clay, iron, cotton and silver in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeSwordForBarter.Initialize("{=AIsDxCeG}Sword For Barter", DefaultSkills.Trade, GetTierCost(9), _tradeSelfMadeMan, "{=AqpEXxNy}{VALUE}% hiring costs of mercenary troops.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=68ye0NpS}{VALUE}% caravan guard wages.", SkillEffect.PerkRole.Quartermaster, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeSelfMadeMan.Initialize("{=uHJltZ5D}Self-made Man", DefaultSkills.Trade, GetTierCost(9), _tradeSwordForBarter, "{=rTbVn6sJ}{VALUE}% barter penalty for items.", SkillEffect.PerkRole.Personal, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=Q9VCvUTg}{VALUE}% build speed for marketplace, kiln and aqueduct projects.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeSilverTongue.Initialize("{=5rDdJpJo}Silver Tongue", DefaultSkills.Trade, GetTierCost(10), _tradeSpringOfGold, "{=UzKyyfbF}{VALUE}% gold required while persuading lords to defect to your faction.", SkillEffect.PerkRole.Personal, -0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=Kb9uC4gQ}{VALUE}% better trade deals from caravans and villagers", SkillEffect.PerkRole.Quartermaster, 0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeSpringOfGold.Initialize("{=K0SRwH6E}Spring of Gold", DefaultSkills.Trade, GetTierCost(10), _tradeSilverTongue, "{=gu7EN92A}{VALUE}% denars of interest income per day based on your current denars up to 1000 denars.", SkillEffect.PerkRole.ClanLeader, 0.001f, SkillEffect.EffectIncrementType.AddFactor, "{=XmqJb7RN}{VALUE}% effect from boosting projects in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeManOfMeans.Initialize("{=Jy2ap8L1}Man of Means", DefaultSkills.Trade, GetTierCost(11), _tradeTrickleDown, "{=7QadTbWs}{VALUE}% costs of recruiting minor faction clans into your clan.", SkillEffect.PerkRole.ClanLeader, -0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=lA0eEkGP}{VALUE}% ransom cost for your freedom.", SkillEffect.PerkRole.Personal, -0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _tradeTrickleDown.Initialize("{=L4fz3Jdr}Trickle Down", DefaultSkills.Trade, GetTierCost(11), _tradeManOfMeans, "{=ANhbaAhL}{VALUE} relationship with merchants if 10.000 or more denars are spent on a single deal.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=REZyGJGH}{VALUE} daily prosperity while building a project in the governed settlement.", SkillEffect.PerkRole.Governor, 2f, SkillEffect.EffectIncrementType.Add);
            _tradeEverythingHasAPrice.Initialize("{=cRwNeSzb}Everything Has a Price", DefaultSkills.Trade, GetTierCost(12), null, "{=HeefccTC}You can now trade settlements in barter.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Invalid);
            _stewardWarriorsDiet.Initialize("{=mIDsxe1O}Warrior's Diet", DefaultSkills.Steward, GetTierCost(1), _stewardFrugal, "{=6NHvsrrx}{VALUE}% food consumption in your party.", SkillEffect.PerkRole.Quartermaster, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=mSvfxXVW}No morale penalty from having single type of food.", SkillEffect.PerkRole.PartyLeader, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardFrugal.Initialize("{=eJIbMa8P}Frugal", DefaultSkills.Steward, GetTierCost(1), _stewardWarriorsDiet, "{=CJB5HCsI}{VALUE}% wages in your party.", SkillEffect.PerkRole.Quartermaster, -0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=OTyYJ2Bt}{VALUE}% recruitment costs.", SkillEffect.PerkRole.PartyLeader, -0.15f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardSevenVeterans.Initialize("{=2ryLuN2i}Seven Veterans", DefaultSkills.Steward, GetTierCost(2), _stewardDrillSergant, "{=gX0edfpK}{VALUE} daily experience for tier 4+ troops in your party.", SkillEffect.PerkRole.Quartermaster, 4f, SkillEffect.EffectIncrementType.Add, "{=g9gTYB8u}{VALUE} militia recruitment in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _stewardDrillSergant.Initialize("{=L9k4bovO}Drill Sergeant", DefaultSkills.Steward, GetTierCost(2), _stewardSevenVeterans, "{=UYhJZya5}{VALUE} daily experience to troops in your party.", SkillEffect.PerkRole.Quartermaster, 2f, SkillEffect.EffectIncrementType.Add, "{=B2msxAju}{VALUE}% garrison wages in the governed settlement.", SkillEffect.PerkRole.Governor, -0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardSweatshops.Initialize("{=jbAtOsIy}Sweatshops", DefaultSkills.Steward, GetTierCost(3), _stewardStiffUpperLip, "{=6wqJA77K}{VALUE}% production rate to owned workshops.", SkillEffect.PerkRole.Personal, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=rA9nzrAr}{VALUE}% siege engine build rate in your party.", SkillEffect.PerkRole.Quartermaster, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardStiffUpperLip.Initialize("{=QUeJ4gc3}Stiff Upper Lip", DefaultSkills.Steward, GetTierCost(3), _stewardSweatshops, "{=y9AsEMnV}{VALUE}% food consumption in your party while it is part of an army.", SkillEffect.PerkRole.Quartermaster, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=1FPpHasQ}{VALUE}% garrison wages in the governed castle.", SkillEffect.PerkRole.Governor, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardPaidInPromise.Initialize("{=CPxbG7Zp}Paid in Promise", DefaultSkills.Steward, GetTierCost(4), _stewardEfficientCampaigner, "{=H9tQfeBr}{VALUE}% companion wages and recruitment fees.", SkillEffect.PerkRole.PartyLeader, -0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=1eKRHLur}Discarded armors are donated to troops for increased experience.", SkillEffect.PerkRole.Quartermaster, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardEfficientCampaigner.Initialize("{=sC53NYcA}Efficient Campaigner", DefaultSkills.Steward, GetTierCost(4), _stewardPaidInPromise, "{=5t6cveXT}{VALUE} extra food for each food taken during village raids for your party.", SkillEffect.PerkRole.PartyLeader, 1f, SkillEffect.EffectIncrementType.Add, "{=JhFCoWbE}{VALUE}% troop wages in your party while it is part of an army.", SkillEffect.PerkRole.Quartermaster, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardGivingHands.Initialize("{=VsqyzWYY}Giving Hands", DefaultSkills.Steward, GetTierCost(5), _stewardLogistician, "{=WaGKvsfc}Discarded weapons are donated to troops for increased experience.", SkillEffect.PerkRole.Quartermaster, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=Eo958e7R}{VALUE}% tariff income in the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardLogistician.Initialize("{=U2buPiec}Logistician", DefaultSkills.Steward, GetTierCost(5), _stewardGivingHands, "{=sG9WGOeN}{VALUE} party morale when number of mounts is greater than number of foot troops in your party.", SkillEffect.PerkRole.Quartermaster, 4f, SkillEffect.EffectIncrementType.Add, "{=Z1n0w5Kc}{VALUE}% tax income.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardRelocation.Initialize("{=R6dnhblo}Relocation", DefaultSkills.Steward, GetTierCost(6), _stewardAidCorps, "{=urSSNtUD}{VALUE}% influence gain from donating troops.", SkillEffect.PerkRole.Quartermaster, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=XmqJb7RN}{VALUE}% effect from boosting projects in the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardAidCorps.Initialize("{=4FdtVyj1}Aid Corps", DefaultSkills.Steward, GetTierCost(6), _stewardRelocation, "{=ZLbCqt23}Wounded troops in your party are no longer paid wages.", SkillEffect.PerkRole.Quartermaster, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=ULY7byYc}{VALUE}% hearth growth in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardGourmet.Initialize("{=63lHFDSG}Gourmet", DefaultSkills.Steward, GetTierCost(7), _stewardSoundReserves, "{=KDtcsKUs}Double the morale bonus from having diverse food in your party.", SkillEffect.PerkRole.Quartermaster, 2f, SkillEffect.EffectIncrementType.AddFactor, "{=q2ZDAm2v}{VALUE}% garrison food consumption during sieges in the governed settlement.", SkillEffect.PerkRole.Governor, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardSoundReserves.Initialize("{=O5dgeoss}Sound Reserves", DefaultSkills.Steward, GetTierCost(7), _stewardGourmet, "{=RkYL5eaP}{VALUE}% troop upgrade costs.", SkillEffect.PerkRole.Quartermaster, -0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=P10E5o9l}{VALUE}% food consumption during sieges in your party.", SkillEffect.PerkRole.Quartermaster, -0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardForcedLabor.Initialize("{=cWyqiNrf}Forced Labor", DefaultSkills.Steward, GetTierCost(8), _stewardContractors, "{=HrOTTjgo}Prisoners in your party provide carry capacity as if they are standard troops.", SkillEffect.PerkRole.Quartermaster, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=T9Viygs8}{VALUE}% construction speed per every 3 prisoners.", SkillEffect.PerkRole.Governor, 0.01f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardContractors.Initialize("{=Pg5enC8c}Contractors", DefaultSkills.Steward, GetTierCost(8), _stewardForcedLabor, "{=4220dQ4j}{VALUE}% wages and upgrade costs of the mercenary troops in your party.", SkillEffect.PerkRole.Quartermaster, -0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=xiTD2qUv}{VALUE}% town project effects in the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardArenicosMules.Initialize("{=qBx8UbUt}Arenicos' Mules", DefaultSkills.Steward, GetTierCost(9), _stewardArenicosHorses, "{=Yp4zv2ib}{VALUE}% carrying capacity for pack animals in your party.", SkillEffect.PerkRole.Quartermaster, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=fswrp38u}{VALUE}% trade penalty for trading pack animals.", SkillEffect.PerkRole.Quartermaster, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardArenicosHorses.Initialize("{=tbQ5bUzD}Arenicos' Horses", DefaultSkills.Steward, GetTierCost(9), _stewardArenicosMules, "{=G9OTNRs4}{VALUE}% carrying capacity for troops in your party.", SkillEffect.PerkRole.Quartermaster, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=xm4eEbQY}{VALUE}% trade penalty for trading mounts.", SkillEffect.PerkRole.Personal, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardMasterOfPlanning.Initialize("{=n5aT1Y7s}Master of Planning", DefaultSkills.Steward, GetTierCost(10), _stewardMasterOfWarcraft, "{=KMmAG5bk}{VALUE}% food consumption while your party is in a siege camp.", SkillEffect.PerkRole.Quartermaster, -0.4f, SkillEffect.EffectIncrementType.AddFactor, "{=P5OjioRl}{VALUE}% effectiveness to continuous projects in the governed settlement. ", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardMasterOfWarcraft.Initialize("{=MM0ARhGh}Master of Warcraft", DefaultSkills.Steward, GetTierCost(10), _stewardMasterOfPlanning, "{=StzVsQ2P}{VALUE}% troop wages while your party is in a siege camp.", SkillEffect.PerkRole.Quartermaster, -0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=ya7alenH}{VALUE}% food consumption of town population in the governed settlement.", SkillEffect.PerkRole.Governor, -0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _stewardPriceOfLoyalty.Initialize("{=eVTnUmSB}Price of Loyalty", DefaultSkills.Steward, GetTierCost(11), null, "{=sYrG8rNy}{VALUE}% to food consumption, wages and combat related morale loss for each steward point above 250 in your party.", SkillEffect.PerkRole.Quartermaster, -0.005f, SkillEffect.EffectIncrementType.AddFactor, "{=lwp50FuF}{VALUE}% tax income for each skill point above 200 in the governed settlement", SkillEffect.PerkRole.Governor, 0.005f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineSelfMedication.Initialize("{=TLGvIdJB}Self Medication", DefaultSkills.Medicine, GetTierCost(1), _medicinePreventiveMedicine, "{=bLAw2di4}{VALUE}% healing rate.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=V53EYEXx}{VALUE}% combat movement speed.", SkillEffect.PerkRole.Personal, 0.02f, SkillEffect.EffectIncrementType.AddFactor);
            _medicinePreventiveMedicine.Initialize("{=wI393cla}Preventive Medicine", DefaultSkills.Medicine, GetTierCost(1), _medicineSelfMedication, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add, "{=10cVZTTm}{VALUE}% recovery of lost hit points after each battle.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineTriageTent.Initialize("{=EU4JjLqV}Triage Tent", DefaultSkills.Medicine, GetTierCost(2), _medicineWalkItOff, "{=ZMPhsLdx}{VALUE}% healing rate when stationary on the campaign map.", SkillEffect.PerkRole.Surgeon, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=Mn714dPH}{VALUE}% food consumption for besieged governed settlement.", SkillEffect.PerkRole.Governor, -0.05f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineWalkItOff.Initialize("{=0pyLfrGZ}Walk It Off", DefaultSkills.Medicine, GetTierCost(2), _medicineTriageTent, "{=NtCBRiLH}{VALUE}% healing rate when moving on the campaign map.", SkillEffect.PerkRole.Surgeon, 0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=4YNqWPEu}{VALUE} hit points recovery after each offensive battle.", SkillEffect.PerkRole.Personal, 10f, SkillEffect.EffectIncrementType.Add);
            _medicineSledges.Initialize("{=TyB6y5bh}Sledges", DefaultSkills.Medicine, GetTierCost(3), _medicineDoctorsOath, "{=bFOfZmwC}{VALUE}% party speed penalty from the wounded.", SkillEffect.PerkRole.Surgeon, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=dfULyKsz}{VALUE} hit points to mounts in your party.", SkillEffect.PerkRole.PartyLeader, 15f, SkillEffect.EffectIncrementType.Add);
            _medicineDoctorsOath.Initialize("{=PAwDV08b}Doctor's Oath", DefaultSkills.Medicine, GetTierCost(3), _medicineSledges, "{=XPB1iBkh}Your medicine skill also applies to enemy casualties, increasing potential prisoners.", SkillEffect.PerkRole.Surgeon, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add);
            _medicineBestMedicine.Initialize("{=ei1JSeco}Best Medicine", DefaultSkills.Medicine, GetTierCost(4), _medicineGoodLodging, "{=L3kTYA2p}{VALUE}% healing rate while party morale is above 70.", SkillEffect.PerkRole.Surgeon, 0.15f, SkillEffect.EffectIncrementType.AddFactor, "{=At6b9vHF}{VALUE} relationship per day with a random notable over age 40 when party is in a town.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _medicineGoodLodging.Initialize("{=RXo3edjn}Good Lodging", DefaultSkills.Medicine, GetTierCost(4), _medicineBestMedicine, "{=NjMR2ypH}{VALUE}% healing rate while resting in settlements.", SkillEffect.PerkRole.Surgeon, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=ZH3U43xW}{VALUE} relationship per day with a random noble over age 40 when party is in a town.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _medicineSiegeMedic.Initialize("{=ObwbbEqE}Siege Medic", DefaultSkills.Medicine, GetTierCost(5), _medicineVeterinarian, "{=Gyy4rwnD}{VALUE}% chance of troops getting wounded instead of getting killed during siege bombardment.", SkillEffect.PerkRole.Surgeon, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=Nxh6aX2E}{VALUE}% chance to recover from lethal wounds during siege bombardment.", SkillEffect.PerkRole.Surgeon, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineVeterinarian.Initialize("{=DNPbZZPQ}Veterinarian", DefaultSkills.Medicine, GetTierCost(5), _medicineSiegeMedic, "{=PZb8JrMH}{VALUE}% daily chance to recover a lame horse.", SkillEffect.PerkRole.Surgeon, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=GJRcFc0V}{VALUE}% chance to recover mounts of dead cavalry troops in battles.", SkillEffect.PerkRole.Surgeon, 0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _medicinePristineStreets.Initialize("{=72tbUfrz}Pristine Streets", DefaultSkills.Medicine, GetTierCost(6), _medicineBushDoctor, "{=JMMVcpA0}{VALUE} settlement prosperity every day in governed settlements.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, "{=R9O0Y64L}{VALUE}% party healing rate while waiting in towns.", SkillEffect.PerkRole.Surgeon, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineBushDoctor.Initialize("{=HGrsb7k2}Bush Doctor", DefaultSkills.Medicine, GetTierCost(6), _medicinePristineStreets, "{=ULY7byYc}{VALUE}% hearth growth in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=UaKTuz1l}{VALUE}% party healing rate while waiting in villages.", SkillEffect.PerkRole.Surgeon, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _medicinePerfectHealth.Initialize("{=cGuPMx4p}Perfect Health", DefaultSkills.Medicine, GetTierCost(7), _medicineHealthAdvise, "{=1yqMERf2}{VALUE}% recovery rate for each type of food in party inventory.", SkillEffect.PerkRole.Surgeon, 0.05f, SkillEffect.EffectIncrementType.AddFactor, "{=QsMEML5E}{VALUE}% animal production rate in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineHealthAdvise.Initialize("{=NxcvQlAk}Health Advice", DefaultSkills.Medicine, GetTierCost(7), _medicinePerfectHealth, "{=uRvym4tq}Chance of recovery from death due to old age for every clan member.", SkillEffect.PerkRole.ClanLeader, 0f, SkillEffect.EffectIncrementType.AddFactor, "{=ioYR1Grc}Wounded troops do not decrease morale in battles.", SkillEffect.PerkRole.Surgeon, 0f, SkillEffect.EffectIncrementType.AddFactor);
            _medicinePhysicianOfPeople.Initialize("{=5o6pSbCx}Physician of People", DefaultSkills.Medicine, GetTierCost(8), _medicineCleanInfrastructure, "{=F7bbkYx4}{VALUE} loyalty per day in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, "{=bNsaUb42}{VALUE}% chance to recover from lethal wounds for tier 1 and 2 troops", SkillEffect.PerkRole.Surgeon, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineCleanInfrastructure.Initialize("{=CZ4y5NAf}Clean Infrastructure", DefaultSkills.Medicine, GetTierCost(8), _medicinePhysicianOfPeople, "{=S9XsuYap}{VALUE} prosperity bonus from civilian projects in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add, "{=dYyFWmGB}{VALUE}% recovery rate from raids in villages bound to the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineCheatDeath.Initialize("{=cpg0oHZJ}Cheat Death", DefaultSkills.Medicine, GetTierCost(9), _medicineFortitudeTonic, "{=n2xL3okw}Cheat death due to old age once.", SkillEffect.PerkRole.Personal, 0f, SkillEffect.EffectIncrementType.Add, "{=b1IKTI8t}{VALUE}% chance to die when you fall unconscious in battle.", SkillEffect.PerkRole.Surgeon, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineFortitudeTonic.Initialize("{=ib2SMG9b}Fortitude Tonic", DefaultSkills.Medicine, GetTierCost(9), _medicineCheatDeath, "{=v9NohO6l}{VALUE} hit points to other heroes in your party.", SkillEffect.PerkRole.PartyLeader, 10f, SkillEffect.EffectIncrementType.Add, "{=Ti9auMiO}{VALUE} hit points.", SkillEffect.PerkRole.Personal, 5f, SkillEffect.EffectIncrementType.Add);
            _medicineHelpingHands.Initialize("{=KavZKNaa}Helping Hands", DefaultSkills.Medicine, GetTierCost(10), _medicineBattleHardened, "{=6NOzUcGN}{VALUE}% troop recovery rate for every 10 troop in your party.", SkillEffect.PerkRole.Surgeon, 0.02f, SkillEffect.EffectIncrementType.AddFactor, "{=iHuzmdm2}{VALUE}% prosperity loss from starvation.", SkillEffect.PerkRole.Governor, -0.5f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineBattleHardened.Initialize("{=oSbRD72H}Battle Hardened", DefaultSkills.Medicine, GetTierCost(10), _medicineHelpingHands, "{=qWpabhp6}{VALUE} experience to wounded units at the end of the battle.", SkillEffect.PerkRole.Surgeon, 25f, SkillEffect.EffectIncrementType.Add, "{=3tLU4AG7}{VALUE}% siege attrition loss in the governed settlement.", SkillEffect.PerkRole.Governor, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _medicineMinisterOfHealth.Initialize("{=rtTjuJTc}Minister of Health", DefaultSkills.Medicine, GetTierCost(11), null, "{=cwFyqrfv}{VALUE} hit point to troops for every skill point above 250.", SkillEffect.PerkRole.Personal, 1f, SkillEffect.EffectIncrementType.Add);
            _engineeringScaffolds.Initialize("{=ekavTnTp}Scaffolds", DefaultSkills.Engineering, GetTierCost(1), _engineeringTorsionEngines, "{=2WC42D5D}{VALUE}% build speed to non-ranged siege engines.", SkillEffect.PerkRole.Engineer, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=F1CJo2wX}{VALUE}% shield hitpoints.", SkillEffect.PerkRole.Personal, 0.3f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringTorsionEngines.Initialize("{=57TDG2Ta}Torsion Engines", DefaultSkills.Engineering, GetTierCost(1), _engineeringScaffolds, "{=hv18SprX}{VALUE}% build speed to ranged siege engines.", SkillEffect.PerkRole.Engineer, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=aA8T7AsY}{VALUE} damage to equipped crossbows.", SkillEffect.PerkRole.Personal, 3f, SkillEffect.EffectIncrementType.Add);
            _engineeringSiegeWorks.Initialize("{=Nr1GPYSr}Siegeworks", DefaultSkills.Engineering, GetTierCost(2), _engineeringDungeonArchitect, "{=oOZH3v9Y}{VALUE}% hit points to ranged siege engines.", SkillEffect.PerkRole.Engineer, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=pIFOcikU}{VALUE} prebuilt catapult to the settlement when a siege starts in the governed settlement.", SkillEffect.PerkRole.Governor, 1f, SkillEffect.EffectIncrementType.Add);
            _engineeringDungeonArchitect.Initialize("{=aPbpBJq5}Dungeon Architect", DefaultSkills.Engineering, GetTierCost(2), _engineeringSiegeWorks, "{=KK3DAGej}{VALUE}% chance of ranged siege engines getting hit while under bombardment.", SkillEffect.PerkRole.Engineer, -0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=ako4Xbvk}{VALUE}% escape chance to prisoners in dungeons of governed settlements.", SkillEffect.PerkRole.Governor, -0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringCarpenters.Initialize("{=YwhAlz5n}Carpenters", DefaultSkills.Engineering, GetTierCost(3), _engineeringMilitaryPlanner, "{=cXCbpPqS}{VALUE}% hit points to rams and siege-towers.", SkillEffect.PerkRole.Engineer, 0.33f, SkillEffect.EffectIncrementType.AddFactor, "{=lVp2bwR9}{VALUE}% build speed for projects in the governed town.", SkillEffect.PerkRole.Governor, 0.12f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringMilitaryPlanner.Initialize("{=mzDsT7lV}Military Planner", DefaultSkills.Engineering, GetTierCost(3), _engineeringCarpenters, "{=zU6gKebE}{VALUE}% ammunition to ranged troops when besieging.", SkillEffect.PerkRole.Engineer, 0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=xZqVL9wN}{VALUE}% build speed for projects in the governed castle.", SkillEffect.PerkRole.Governor, 0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringWallBreaker.Initialize("{=0wlWgIeL}Wall Breaker", DefaultSkills.Engineering, GetTierCost(4), _engineeringDreadfulSieger, "{=JBa4DO2u}{VALUE}% damage dealt to walls during siege bombardment.", SkillEffect.PerkRole.Engineer, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=g3SKNcMV}{VALUE}% damage dealt to shields by troops in your formation.", SkillEffect.PerkRole.Captain, 0.1f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _engineeringDreadfulSieger.Initialize("{=bIS4kqmf}Dreadful Besieger", DefaultSkills.Engineering, GetTierCost(4), _engineeringWallBreaker, "{=zUzfRYzf}{VALUE}% accuracy to your siege engines during siege bombardments in the governed settlement.", SkillEffect.PerkRole.Governor, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=cD8a5zbZ}{VALUE}% crossbow damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.CrossbowUser);
            _engineeringSalvager.Initialize("{=AgJAfEEZ}Salvager", DefaultSkills.Engineering, GetTierCost(5), _engineeringForeman, "{=mtb8vJ4o}{VALUE}% accuracy to ballistas during siege bombardment.", SkillEffect.PerkRole.Engineer, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=qfjgKCty}{VALUE}% siege engine build speed increase for each militia.", SkillEffect.PerkRole.Governor, 0.001f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringForeman.Initialize("{=3ML4EkWY}Foreman", DefaultSkills.Engineering, GetTierCost(5), _engineeringSalvager, "{=M4IaRQJy}{VALUE}% mangonel and trebuchet accuracy during siege bombardment.", SkillEffect.PerkRole.Engineer, 0.1f, SkillEffect.EffectIncrementType.AddFactor, "{=ivrmsCFC}{VALUE} prosperity when a project is finished in the governed settlement.", SkillEffect.PerkRole.Governor, 100f, SkillEffect.EffectIncrementType.Add);
            _engineeringStonecutters.Initialize("{=auIRGa2V}Stonecutters", DefaultSkills.Engineering, GetTierCost(6), _engineeringSiegeEngineer, "{=uohYIaSw}{VALUE}% build speed for fortifications, aqueducts and barrack projects in the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=uakMSJY6}Fire versions of siege engines can be constructed.", SkillEffect.PerkRole.Engineer, 0f, SkillEffect.EffectIncrementType.Add);
            _engineeringSiegeEngineer.Initialize("{=pFGhJxyN}Siege Engineer", DefaultSkills.Engineering, GetTierCost(6), _engineeringStonecutters, "{=cRfa2IaT}{VALUE}% hit points to defensive siege engines in the governed settlement.", SkillEffect.PerkRole.Governor, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=uakMSJY6}Fire versions of siege engines can be constructed.", SkillEffect.PerkRole.Engineer, 0f, SkillEffect.EffectIncrementType.Add);
            _engineeringCampBuilding.Initialize("{=Lv2pbg8c}Camp Building", DefaultSkills.Engineering, GetTierCost(7), _engineeringBattlements, "{=fDSyE0eE}{VALUE}% cohesion loss of armies when besieging.", SkillEffect.PerkRole.ArmyCommander, -0.5f, SkillEffect.EffectIncrementType.AddFactor, "{=0T7AKmVS}{VALUE}% casualty chance from siege bombardments.", SkillEffect.PerkRole.Engineer, -0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringBattlements.Initialize("{=hHHEW1HN}Battlements", DefaultSkills.Engineering, GetTierCost(7), _engineeringCampBuilding, "{=Ix98dg08}{VALUE} prebuilt ballista when you set up a siege camp.", SkillEffect.PerkRole.Engineer, 1f, SkillEffect.EffectIncrementType.Add, "{=hXqSlJM7}{VALUE} maximum granary capacity in the governed settlement.", SkillEffect.PerkRole.Governor, 100f, SkillEffect.EffectIncrementType.Add);
            _engineeringEngineeringGuilds.Initialize("{=elKQc0O6}Engineering Guilds", DefaultSkills.Engineering, GetTierCost(8), _engineeringApprenticeship, "{=KAozuVLa}{VALUE} recruitment slot when recruiting from artisan notables.", SkillEffect.PerkRole.Engineer, 1f, SkillEffect.EffectIncrementType.Add, "{=EIkzYco9}{VALUE}% wall hit points in the governed settlement.", SkillEffect.PerkRole.Governor, 0.25f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringApprenticeship.Initialize("{=yzybG5rl}Apprenticeship", DefaultSkills.Engineering, GetTierCost(8), _engineeringEngineeringGuilds, "{=3m2tQF9F}{VALUE} experience to troops when a siege engine is built.", SkillEffect.PerkRole.Engineer, 5f, SkillEffect.EffectIncrementType.Add, "{=AeTSNsRu}{VALUE}% prosperity gain for each unique project in the governed settlement.", SkillEffect.PerkRole.Governor, 0.01f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringMetallurgy.Initialize("{=qjvDsu8u}Metallurgy", DefaultSkills.Engineering, GetTierCost(9), _engineeringImprovedTools, "{=ZMVo5TTq}{VALUE}% chance to remove negative modifiers on looted items.", SkillEffect.PerkRole.Engineer, 0.3f, SkillEffect.EffectIncrementType.AddFactor, "{=XWPcZgM9}{VALUE} armor to all equipped armor pieces of troops in your formation.", SkillEffect.PerkRole.Captain, 5f, SkillEffect.EffectIncrementType.Add, TroopUsageFlags.Undefined, TroopUsageFlags.None);
            _engineeringImprovedTools.Initialize("{=XixNAaD5}Improved Tools", DefaultSkills.Engineering, GetTierCost(9), _engineeringMetallurgy, "{=5ATpHJag}{VALUE}% siege camp preparation speed.", SkillEffect.PerkRole.Engineer, 0.2f, SkillEffect.EffectIncrementType.AddFactor, "{=eBmaa49a}{VALUE}% melee damage by troops in your formation.", SkillEffect.PerkRole.Captain, 0.05f, SkillEffect.EffectIncrementType.AddFactor, TroopUsageFlags.Undefined, TroopUsageFlags.Melee);
            _engineeringClockwork.Initialize("{=Z9Rey6LC}Clockwork", DefaultSkills.Engineering, GetTierCost(10), _engineeringArchitecturalCommisions, "{=yn9GhVK4}{VALUE}% reload speed to ballistas during siege bombardment.", SkillEffect.PerkRole.Engineer, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=Jlmtufb3}{VALUE}% effect from boosting projects in the governed town.", SkillEffect.PerkRole.Governor, 0.2f, SkillEffect.EffectIncrementType.AddFactor);
            _engineeringArchitecturalCommisions.Initialize("{=KODafKT7}Architectural Commissions", DefaultSkills.Engineering, GetTierCost(10), _engineeringClockwork, "{=0aMHHQL4}{VALUE}% reload speed to mangonels and trebuchets in siege bombardment.", SkillEffect.PerkRole.Engineer, 0.25f, SkillEffect.EffectIncrementType.AddFactor, "{=e3ykBSpR}{VALUE} gold per day for continuous projects in the governed settlement.", SkillEffect.PerkRole.Governor, 20f, SkillEffect.EffectIncrementType.Add);
            _engineeringMasterwork.Initialize("{=SNsAlN4R}Masterwork", DefaultSkills.Engineering, GetTierCost(11), null, "{=RP2Jn3J4}{VALUE}% damage for each engineering skill point over 250 for siege engines in siege bombardment.", SkillEffect.PerkRole.Engineer, 0.01f, SkillEffect.EffectIncrementType.AddFactor);
        }

        private int GetTierCost(int tierIndex)
        {
            return TierSkillRequirements[tierIndex - 1];
        }

        private PerkObject Create(string stringId)
        {
            return Game.Current.ObjectManager.RegisterPresumedObject(new PerkObject(stringId));
        }

        private PerkObject _oneHandedBasher;
        private PerkObject _oneHandedToBeBlunt;
        private PerkObject _oneHandedSteelCoreShields;
        private PerkObject _oneHandedFleetOfFoot;
        private PerkObject _oneHandedDeadlyPurpose;
        private PerkObject _oneHandedUnwaveringDefense;
        private PerkObject _oneHandedWrappedHandles;
        private PerkObject _oneHandedWayOfTheSword;
        private PerkObject _oneHandedPrestige;
        private PerkObject _oneHandedChinkInTheArmor;
        private PerkObject _oneHandedStandUnited;
        private PerkObject _oneHandedLeadByExample;
        private PerkObject _oneHandedMilitaryTradition;
        private PerkObject _oneHandedCorpsACorps;
        private PerkObject _oneHandedShieldWall;
        private PerkObject _oneHandedArrowCatcher;
        private PerkObject _oneHandedShieldBearer;
        private PerkObject _oneHandedTrainer;
        private PerkObject _oneHandedDuelist;
        private PerkObject _oneHandedSwiftStrike;
        private PerkObject _oneHandedCavalry;
        private PerkObject _twoHandedWoodChopper;
        private PerkObject _twoHandedWayOfTheGreatAxe;
        private PerkObject _twoHandedStrongGrip;
        private PerkObject _twoHandedOnTheEdge;
        private PerkObject _twoHandedHeadBasher;
        private PerkObject _twoHandedShowOfStrength;
        private PerkObject _twoHandedBeastSlayer;
        private PerkObject _twoHandedBaptisedInBlood;
        private PerkObject _twoHandedShieldBreaker;
        private PerkObject _twoHandedConfidence;
        private PerkObject _twoHandedBerserker;
        private PerkObject _twoHandedProjectileDeflection;
        private PerkObject _twoHandedTerror;
        private PerkObject _twoHandedHope;
        private PerkObject _twoHandedThickHides;
        private PerkObject _twoHandedRecklessCharge;
        private PerkObject _twoHandedBladeMaster;
        private PerkObject _twoHandedVandal;
        private PerkObject _throwingShieldBreaker;
        private PerkObject _throwingHunter;
        private PerkObject _throwingFlexibleFighter;
        private PerkObject _throwingMountedSkirmisher;
        private PerkObject _throwingPerfectTechnique;
        private PerkObject _throwingRunningThrow;
        private PerkObject _throwingKnockOff;
        private PerkObject _throwingWellPrepared;
        private PerkObject _throwingSkirmisher;
        private PerkObject _throwingFocus;
        private PerkObject _throwingLastHit;
        private PerkObject _throwingHeadHunter;
        private PerkObject _throwingThrowingCompetitions;
        private PerkObject _throwingSaddlebags;
        private PerkObject _throwingSplinters;
        private PerkObject _throwingResourceful;
        private PerkObject _throwingLongReach;
        private PerkObject _throwingWeakSpot;
        private PerkObject _throwingQuickDraw;
        private PerkObject _throwingImpale;
        private PerkObject _throwingUnstoppableForce;
        private PerkObject _ridingNimbleSteed;
        private PerkObject _ridingWellStraped;
        private PerkObject _ridingVeterinary;
        private PerkObject _ridingNomadicTraditions;
        private PerkObject _ridingDeeperSacks;
        private PerkObject _ridingSagittarius;
        private PerkObject _ridingSweepingWind;
        private PerkObject _ridingReliefForce;
        private PerkObject _ridingMountedWarrior;
        private PerkObject _ridingHorseArcher;
        private PerkObject _ridingShepherd;
        private PerkObject _ridingBreeder;
        private PerkObject _ridingThunderousCharge;
        private PerkObject _ridingAnnoyingBuzz;
        private PerkObject _ridingMountedPatrols;
        private PerkObject _ridingCavalryTactics;
        private PerkObject _ridingDauntlessSteed;
        private PerkObject _ridingToughSteed;
        private PerkObject _ridingFullSpeed;
        private PerkObject _ridingTheWayOfTheSaddle;
        private PerkObject _athleticsFormFittingArmor;
        private PerkObject _athleticsImposingStature;
        private PerkObject _athleticsStamina;
        private PerkObject _athleticsSprint;
        private PerkObject _athleticsPowerful;
        private PerkObject _athleticsSurgingBlow;
        private PerkObject _athleticsWellBuilt;
        private PerkObject _athleticsFury;
        private PerkObject _athleticsBraced;
        private PerkObject _athleticsAGoodDaysRest;
        private PerkObject _athleticsDurable;
        private PerkObject _athleticsEnergetic;
        private PerkObject _athleticsSteady;
        private PerkObject _athleticsStrong;
        private PerkObject _athleticsStrongLegs;
        private PerkObject _athleticsStrongArms;
        private PerkObject _athleticsSpartan;
        private PerkObject _athleticsMorningExercise;
        private PerkObject _athleticsIgnorePain;
        private PerkObject _athleticsWalkItOff;
        private PerkObject _athleticsMightyBlow;
        private PerkObject _craftingSteelMaker2;
        private PerkObject _craftingSteelMaker3;
        private PerkObject _craftingCharcoalMaker;
        private PerkObject _craftingSteelMaker;
        private PerkObject _craftingCuriousSmelter;
        private PerkObject _craftingCuriousSmith;
        private PerkObject _craftingPracticalSmelter;
        private PerkObject _craftingPracticalRefiner;
        private PerkObject _craftingPracticalSmith;
        private PerkObject _craftingArtisanSmith;
        private PerkObject _craftingExperiencedSmith;
        private PerkObject _craftingMasterSmith;
        private PerkObject _craftingLegendarySmith;
        private PerkObject _craftingVigorousSmith;
        private PerkObject _craftingStrongSmith;
        private PerkObject _craftingEnduringSmith;
        private PerkObject _craftingIronMaker;
        private PerkObject _craftingFencerSmith;
        private PerkObject _craftingSharpenedEdge;
        private PerkObject _craftingSharpenedTip;
        private PerkObject _tacticsSmallUnitTactics;
        private PerkObject _tacticsHordeLeader;
        private PerkObject _tacticsLawKeeper;
        private PerkObject _tacticsLooseFormations;
        private PerkObject _tacticsSwiftRegroup;
        private PerkObject _tacticsExtendedSkirmish;
        private PerkObject _tacticsDecisiveBattle;
        private PerkObject _tacticsCoaching;
        private PerkObject _tacticsImproviser;
        private PerkObject _tacticsOnTheMarch;
        private PerkObject _tacticsCallToArms;
        private PerkObject _tacticsPickThemOfTheWalls;
        private PerkObject _tacticsMakeThemPay;
        private PerkObject _tacticsEliteReserves;
        private PerkObject _tacticsEncirclement;
        private PerkObject _tacticsPreBattleManeuvers;
        private PerkObject _tacticsBesieged;
        private PerkObject _tacticsCounteroffensive;
        private PerkObject _tacticsGensdarmes;
        private PerkObject _tacticsTightFormations;
        private PerkObject _tacticsTacticalMastery;
        private PerkObject _scoutingNightRunner;
        private PerkObject _scoutingWaterDiviner;
        private PerkObject _scoutingForestKin;
        private PerkObject _scoutingForcedMarch;
        private PerkObject _scoutingDesertBorn;
        private PerkObject _scoutingPathfinder;
        private PerkObject _scoutingUnburdened;
        private PerkObject _scoutingTracker;
        private PerkObject _scoutingRanger;
        private PerkObject _scoutingMountedScouts;
        private PerkObject _scoutingPatrols;
        private PerkObject _scoutingForagers;
        private PerkObject _scoutingBeastWhisperer;
        private PerkObject _scoutingVillageNetwork;
        private PerkObject _scoutingRumourNetwork;
        private PerkObject _scoutingVantagePoint;
        private PerkObject _scoutingKeenSight;
        private PerkObject _scoutingVanguard;
        private PerkObject _scoutingRearguard;
        private PerkObject _scoutingDayTraveler;
        private PerkObject _scoutingUncannyInsight;
        private PerkObject _rogueryTwoFaced;
        private PerkObject _rogueryDeepPockets;
        private PerkObject _rogueryInBestLight;
        private PerkObject _roguerySweetTalker;
        private PerkObject _rogueryKnowHow;
        private PerkObject _rogueryManhunter;
        private PerkObject _rogueryPromises;
        private PerkObject _rogueryScarface;
        private PerkObject _rogueryWhiteLies;
        private PerkObject _roguerySmugglerConnections;
        private PerkObject _rogueryPartnersInCrime;
        private PerkObject _rogueryOneOfTheFamily;
        private PerkObject _roguerySaltTheEarth;
        private PerkObject _rogueryCarver;
        private PerkObject _rogueryRansomBroker;
        private PerkObject _rogueryArmsDealer;
        private PerkObject _rogueryDirtyFighting;
        private PerkObject _rogueryDashAndSlash;
        private PerkObject _rogueryFleetFooted;
        private PerkObject _rogueryNoRestForTheWicked;
        private PerkObject _rogueryRogueExtraordinaire;
        private PerkObject _leadershipFerventAttacker;
        private PerkObject _leadershipStoutDefender;
        private PerkObject _leadershipAuthority;
        private PerkObject _leadershipHeroicLeader;
        private PerkObject _leadershipLoyaltyAndHonor;
        private PerkObject _leadershipFamousCommander;
        private PerkObject _leadershipRaiseTheMeek;
        private PerkObject _leadershipPresence;
        private PerkObject _leadershipVeteransRespect;
        private PerkObject _leadershipLeaderOfTheMasses;
        private PerkObject _leadershipInspiringLeader;
        private PerkObject _leadershipUpliftingSpirit;
        private PerkObject _leadershipMakeADifference;
        private PerkObject _leadershipLeadByExample;
        private PerkObject _leadershipTrustedCommander;
        private PerkObject _leadershipGreatLeader;
        private PerkObject _leadershipWePledgeOurSwords;
        private PerkObject _leadershipUltimateLeader;
        private PerkObject _leadershipTalentMagnet;
        private PerkObject _leadershipCitizenMilitia;
        private PerkObject _leadershipCombatTips;
        private PerkObject _charmVirile;
        private PerkObject _charmSelfPromoter;
        private PerkObject _charmOratory;
        private PerkObject _charmWarlord;
        private PerkObject _charmForgivableGrievances;
        private PerkObject _charmMeaningfulFavors;
        private PerkObject _charmInBloom;
        private PerkObject _charmYoungAndRespectful;
        private PerkObject _charmFirebrand;
        private PerkObject _charmFlexibleEthics;
        private PerkObject _charmEffortForThePeople;
        private PerkObject _charmSlickNegotiator;
        private PerkObject _charmGoodNatured;
        private PerkObject _charmTribute;
        private PerkObject _charmMoralLeader;
        private PerkObject _charmNaturalLeader;
        private PerkObject _charmPublicSpeaker;
        private PerkObject _charmParade;
        private PerkObject _charmCamaraderie;
        private PerkObject _charmImmortalCharm;
        private PerkObject _tradeTravelingRumors;
        private PerkObject _tradeLocalConnection;
        private PerkObject _tradeDistributedGoods;
        private PerkObject _tradeTollgates;
        private PerkObject _tradeArtisanCommunity;
        private PerkObject _tradeGreatInvestor;
        private PerkObject _tradeMercenaryConnections;
        private PerkObject _tradeContentTrades;
        private PerkObject _tradeInsurancePlans;
        private PerkObject _tradeRapidDevelopment;
        private PerkObject _tradeGranaryAccountant;
        private PerkObject _tradeTradeyardForeman;
        private PerkObject _tradeWholeSeller;
        private PerkObject _tradeCaravanMaster;
        private PerkObject _tradeMarketDealer;
        private PerkObject _tradeSwordForBarter;
        private PerkObject _tradeTrickleDown;
        private PerkObject _tradeManOfMeans;
        private PerkObject _tradeSpringOfGold;
        private PerkObject _tradeSilverTongue;
        private PerkObject _tradeSelfMadeMan;
        private PerkObject _tradeAppraiser;
        private PerkObject _tradeEverythingHasAPrice;
        private PerkObject _medicinePreventiveMedicine;
        private PerkObject _medicineTriageTent;
        private PerkObject _medicineWalkItOff;
        private PerkObject _medicineSledges;
        private PerkObject _medicineDoctorsOath;
        private PerkObject _medicineBestMedicine;
        private PerkObject _medicineGoodLodging;
        private PerkObject _medicineSiegeMedic;
        private PerkObject _medicineVeterinarian;
        private PerkObject _medicinePristineStreets;
        private PerkObject _medicineBushDoctor;
        private PerkObject _medicinePerfectHealth;
        private PerkObject _medicineHealthAdvise;
        private PerkObject _medicinePhysicianOfPeople;
        private PerkObject _medicineCleanInfrastructure;
        private PerkObject _medicineCheatDeath;
        private PerkObject _medicineHelpingHands;
        private PerkObject _medicineFortitudeTonic;
        private PerkObject _medicineBattleHardened;
        private PerkObject _medicineMinisterOfHealth;
        private PerkObject _medicineSelfMedication;
        private PerkObject _stewardFrugal;
        private PerkObject _stewardSevenVeterans;
        private PerkObject _stewardDrillSergant;
        private PerkObject _stewardSweatshops;
        private PerkObject _stewardEfficientCampaigner;
        private PerkObject _stewardGivingHands;
        private PerkObject _stewardLogistician;
        private PerkObject _stewardStiffUpperLip;
        private PerkObject _stewardPaidInPromise;
        private PerkObject _stewardRelocation;
        private PerkObject _stewardAidCorps;
        private PerkObject _stewardGourmet;
        private PerkObject _stewardSoundReserves;
        private PerkObject _stewardArenicosMules;
        private PerkObject _stewardForcedLabor;
        private PerkObject _stewardPriceOfLoyalty;
        private PerkObject _stewardContractors;
        private PerkObject _stewardMasterOfWarcraft;
        private PerkObject _stewardMasterOfPlanning;
        private PerkObject _stewardWarriorsDiet;
        private PerkObject _stewardArenicosHorses;
        private PerkObject _engineeringSiegeWorks;
        private PerkObject _engineeringCarpenters;
        private PerkObject _engineeringDungeonArchitect;
        private PerkObject _engineeringMilitaryPlanner;
        private PerkObject _engineeringDreadfulSieger;
        private PerkObject _engineeringTorsionEngines;
        private PerkObject _engineeringSalvager;
        private PerkObject _engineeringForeman;
        private PerkObject _engineeringWallBreaker;
        private PerkObject _engineeringStonecutters;
        private PerkObject _engineeringSiegeEngineer;
        private PerkObject _engineeringCampBuilding;
        private PerkObject _engineeringBattlements;
        private PerkObject _engineeringEngineeringGuilds;
        private PerkObject _engineeringApprenticeship;
        private PerkObject _engineeringMetallurgy;
        private PerkObject _engineeringImprovedTools;
        private PerkObject _engineeringClockwork;
        private PerkObject _engineeringArchitecturalCommisions;
        private PerkObject _engineeringScaffolds;
        private PerkObject _engineeringMasterwork;
    }
}
